

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 28 06:38:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.10
    38                           ; Generated 31/07/2019 GMT
    39                           ; 
    40                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227                           
   228                           	psect	idataBANK0
   229  00AB                     __pidataBANK0:	
   230                           
   231                           ;initializer for _sec
   232  00AB  3401               	retlw	1
   233  00AC  3400               	retlw	0
   234                           
   235                           ;initializer for _hour
   236  00AD  340A               	retlw	10
   237  00AE  3400               	retlw	0
   238                           
   239                           ;initializer for _date
   240  00AF  341C               	retlw	28
   241  00B0  3400               	retlw	0
   242                           
   243                           ;initializer for _month
   244  00B1  340C               	retlw	12
   245  00B2  3400               	retlw	0
   246                           
   247                           ;initializer for _year
   248  00B3  3414               	retlw	20
   249  00B4  3400               	retlw	0
   250  0013                     _SSPBUF	set	19
   251  0014                     _SSPCON	set	20
   252  0043                     _RD3	set	67
   253  0042                     _RD2	set	66
   254  0047                     _RD7	set	71
   255  0046                     _RD6	set	70
   256  0045                     _RD5	set	69
   257  0044                     _RD4	set	68
   258  0088                     _TRISD	set	136
   259  0094                     _SSPSTAT	set	148
   260  0093                     _SSPADD	set	147
   261  0091                     _SSPCON2	set	145
   262  048C                     _ACKEN	set	1164
   263  048D                     _ACKDT	set	1165
   264  048B                     _RCEN	set	1163
   265  048A                     _PEN	set	1162
   266  0488                     _SEN	set	1160
   267  043C                     _TRISC4	set	1084
   268  043B                     _TRISC3	set	1083
   269                           
   270                           	psect	strings
   271  0003                     __pstrings:	
   272  0003                     stringtab:	
   273  0003                     __stringtab:	
   274  0003                     stringcode:	
   275                           ;	String table - string pointers are 1 byte each
   276                           
   277  0003                     stringdir:	
   278  0003  3000               	movlw	high stringdir
   279  0004  008A               	movwf	10
   280  0005  0804               	movf	4,w
   281  0006  0A84               	incf	4,f
   282  0007  0782               	addwf	2,f
   283  0008                     __stringbase:	
   284  0008  3400               	retlw	0
   285  0009                     __end_of__stringtab:	
   286  0009                     STR_1:	
   287  0009  3454               	retlw	84	;'T'
   288  000A  3469               	retlw	105	;'i'
   289  000B  346D               	retlw	109	;'m'
   290  000C  3465               	retlw	101	;'e'
   291  000D  343A               	retlw	58	;':'
   292  000E  3420               	retlw	32	;' '
   293  000F  3400               	retlw	0
   294  0010                     STR_2:	
   295  0010  3444               	retlw	68	;'D'
   296  0011  3461               	retlw	97	;'a'
   297  0012  3474               	retlw	116	;'t'
   298  0013  3465               	retlw	101	;'e'
   299  0014  343A               	retlw	58	;':'
   300  0015  3420               	retlw	32	;' '
   301  0016  3400               	retlw	0
   302                           
   303                           ; #config settings
   304  0000                     
   305                           	psect	cinit
   306  07EC                     start_initialization:	
   307  07EC                     __initialization:	
   308                           
   309                           ; Initialize objects allocated to BANK0
   310  07EC  1383               	bcf	3,7	;select IRP bank0
   311  07ED  304E               	movlw	low (__pdataBANK0+10)
   312  07EE  00FD               	movwf	btemp+-1
   313  07EF  3000               	movlw	high __pidataBANK0
   314  07F0  00FE               	movwf	btemp
   315  07F1  30AB               	movlw	low __pidataBANK0
   316  07F2  00FF               	movwf	btemp+1
   317  07F3  3044               	movlw	low __pdataBANK0
   318  07F4  0084               	movwf	4
   319  07F5  120A  118A  20D3  120A  118A  	fcall	init_ram0
   320                           
   321                           ; Clear objects allocated to BANK0
   322  07FA  01CE               	clrf	__pbssBANK0& (0+127)
   323  07FB  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:	
   328  07FC  0183               	clrf	3
   329  07FD  120A  118A  2E2E   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK0
   332  004E                     __pbssBANK0:	
   333  004E                     _min:	
   334  004E                     	ds	2
   335                           
   336                           	psect	dataBANK0
   337  0044                     __pdataBANK0:	
   338  0044                     _sec:	
   339  0044                     	ds	2
   340  0046                     _hour:	
   341  0046                     	ds	2
   342  0048                     _date:	
   343  0048                     	ds	2
   344  004A                     _month:	
   345  004A                     	ds	2
   346  004C                     _year:	
   347  004C                     	ds	2
   348                           
   349                           	psect	inittext
   350  00CF                     init_fetch0:	
   351                           ;	Called with low address in FSR and high address in W
   352                           
   353  00CF  087E               	movf	btemp,w
   354  00D0  008A               	movwf	10
   355  00D1  087F               	movf	btemp+1,w
   356  00D2  0082               	movwf	2
   357  00D3                     init_ram0:	
   358                           ;Called with:
   359                           ;	high address of idata address in btemp 
   360                           ;	low address of idata address in btemp+1 
   361                           ;	low address of data in FSR
   362                           ;	high address + 1 of data in btemp-1
   363                           
   364  00D3  120A  118A  20CF  120A  118A  	fcall	init_fetch0
   365  00D8  0080               	movwf	0
   366  00D9  0A84               	incf	4,f
   367  00DA  0804               	movf	4,w
   368  00DB  067D               	xorwf	btemp+-1,w
   369  00DC  1903               	btfsc	3,2
   370  00DD  3400               	retlw	0
   371  00DE  0AFF               	incf	btemp+1,f
   372  00DF  1903               	btfsc	3,2
   373  00E0  0AFE               	incf	btemp,f
   374  00E1  28D3               	goto	init_ram0
   375                           
   376                           	psect	cstackCOMMON
   377  0070                     __pcstackCOMMON:	
   378  0070                     ?_I2C_Hold:	
   379  0070                     ??_I2C_Hold:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_I2C_Begin:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_I2C_Begin:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_I2C_End:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ??_I2C_End:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_Lcd_Port:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_Lcd_Port:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_Lcd_Cmd:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_Lcd_Init:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_Lcd_Write_Char:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_Lcd_Write_String:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_setTime:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_updateTime:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_I2C_Read:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Lcd_Clear:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ?___wmul:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ?___awdiv:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     ?___awmod:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0070                     ?___lmul:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0070                     Lcd_Port@a:	
   440                           ; 4 bytes @ 0x0
   441                           
   442  0070                     I2C_Read@ack:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ___wmul@multiplier:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  0070                     ___awdiv@divisor:	
   449                           ; 2 bytes @ 0x0
   450                           
   451  0070                     ___awmod@divisor:	
   452                           ; 2 bytes @ 0x0
   453                           
   454  0070                     ___lmul@multiplier:	
   455                           ; 2 bytes @ 0x0
   456                           
   457                           
   458                           ; 4 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     ??_Lcd_Cmd:	
   461  0071                     ??_Lcd_Write_Char:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466  0071                     	ds	1
   467  0072                     ??_I2C_Read:	
   468  0072                     Lcd_Write_Char@temp:	
   469                           ; 1 bytes @ 0x2
   470                           
   471  0072                     ___wmul@multiplicand:	
   472                           ; 1 bytes @ 0x2
   473                           
   474  0072                     ___awdiv@dividend:	
   475                           ; 2 bytes @ 0x2
   476                           
   477  0072                     ___awmod@dividend:	
   478                           ; 2 bytes @ 0x2
   479                           
   480                           
   481                           ; 2 bytes @ 0x2
   482  0072                     	ds	1
   483  0073                     Lcd_Cmd@a:	
   484  0073                     Lcd_Write_Char@y:	
   485                           ; 1 bytes @ 0x3
   486                           
   487                           
   488                           ; 1 bytes @ 0x3
   489  0073                     	ds	1
   490  0074                     ??_Lcd_Clear:	
   491  0074                     ?_Lcd_Set_Cursor:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ??_Lcd_Init:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     ??___wmul:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ??___awdiv:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     ??___awmod:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0074                     Lcd_Set_Cursor@b:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0074                     Lcd_Write_Char@a:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     I2C_Read@incoming:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     ___wmul@product:	
   516                           ; 2 bytes @ 0x4
   517                           
   518  0074                     ___lmul@multiplicand:	
   519                           ; 2 bytes @ 0x4
   520                           
   521                           
   522                           ; 4 bytes @ 0x4
   523  0074                     	ds	1
   524  0075                     ??_Lcd_Set_Cursor:	
   525  0075                     ??_Lcd_Write_String:	
   526                           ; 1 bytes @ 0x5
   527                           
   528  0075                     ___awdiv@counter:	
   529                           ; 1 bytes @ 0x5
   530                           
   531  0075                     ___awmod@counter:	
   532                           ; 1 bytes @ 0x5
   533                           
   534  0075                     Lcd_Write_String@i:	
   535                           ; 1 bytes @ 0x5
   536                           
   537                           
   538                           ; 2 bytes @ 0x5
   539  0075                     	ds	1
   540  0076                     ?_b2d:	
   541  0076                     ___awdiv@sign:	
   542                           ; 2 bytes @ 0x6
   543                           
   544  0076                     ___awmod@sign:	
   545                           ; 1 bytes @ 0x6
   546                           
   547  0076                     b2d@to_convert:	
   548                           ; 1 bytes @ 0x6
   549                           
   550                           
   551                           ; 2 bytes @ 0x6
   552  0076                     	ds	1
   553  0077                     Lcd_Set_Cursor@a:	
   554  0077                     Lcd_Write_String@a:	
   555                           ; 1 bytes @ 0x7
   556                           
   557  0077                     ___awdiv@quotient:	
   558                           ; 1 bytes @ 0x7
   559                           
   560                           
   561                           ; 2 bytes @ 0x7
   562  0077                     	ds	1
   563  0078                     ??_b2d:	
   564  0078                     ??___lmul:	
   565                           ; 1 bytes @ 0x8
   566                           
   567  0078                     Lcd_Set_Cursor@z:	
   568                           ; 1 bytes @ 0x8
   569                           
   570                           
   571                           ; 1 bytes @ 0x8
   572  0078                     	ds	1
   573  0079                     ?_d2b:	
   574  0079                     Lcd_Set_Cursor@y:	
   575                           ; 2 bytes @ 0x9
   576                           
   577  0079                     d2b@to_convert:	
   578                           ; 1 bytes @ 0x9
   579                           
   580  0079                     ___lmul@product:	
   581                           ; 2 bytes @ 0x9
   582                           
   583                           
   584                           ; 4 bytes @ 0x9
   585  0079                     	ds	1
   586  007A                     Lcd_Set_Cursor@temp:	
   587                           
   588                           ; 1 bytes @ 0xA
   589  007A                     	ds	1
   590  007B                     ??_d2b:	
   591                           
   592                           ; 1 bytes @ 0xB
   593  007B                     	ds	2
   594  007D                     ??_I2C_Write:	
   595  007D                     ??_setTime:	
   596                           ; 1 bytes @ 0xD
   597                           
   598  007D                     ??_updateTime:	
   599                           ; 1 bytes @ 0xD
   600                           
   601  007D                     ??___lldiv:	
   602                           ; 1 bytes @ 0xD
   603                           
   604                           
   605                           ; 1 bytes @ 0xD
   606  007D                     	ds	1
   607                           
   608                           	psect	cstackBANK0
   609  0020                     __pcstackBANK0:	
   610  0020                     ?_I2C_Write:	
   611  0020                     ?___lldiv:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0020                     I2C_Write@data:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0020                     ___lldiv@divisor:	
   618                           ; 2 bytes @ 0x0
   619                           
   620                           
   621                           ; 4 bytes @ 0x0
   622  0020                     	ds	4
   623  0024                     ___lldiv@dividend:	
   624                           
   625                           ; 4 bytes @ 0x4
   626  0024                     	ds	4
   627  0028                     ___lldiv@quotient:	
   628                           
   629                           ; 4 bytes @ 0x8
   630  0028                     	ds	4
   631  002C                     ___lldiv@counter:	
   632                           
   633                           ; 1 bytes @ 0xC
   634  002C                     	ds	1
   635  002D                     ?_I2C_Init:	
   636  002D                     I2C_Init@freq:	
   637                           ; 1 bytes @ 0xD
   638                           
   639                           
   640                           ; 4 bytes @ 0xD
   641  002D                     	ds	4
   642  0031                     ??_I2C_Init:	
   643                           
   644                           ; 1 bytes @ 0x11
   645  0031                     	ds	4
   646  0035                     ??_main:	
   647                           
   648                           ; 1 bytes @ 0x15
   649  0035                     	ds	3
   650  0038                     main@sec0:	
   651                           
   652                           ; 1 bytes @ 0x18
   653  0038                     	ds	1
   654  0039                     main@sec1:	
   655                           
   656                           ; 1 bytes @ 0x19
   657  0039                     	ds	1
   658  003A                     main@min0:	
   659                           
   660                           ; 1 bytes @ 0x1A
   661  003A                     	ds	1
   662  003B                     main@min1:	
   663                           
   664                           ; 1 bytes @ 0x1B
   665  003B                     	ds	1
   666  003C                     main@hour0:	
   667                           
   668                           ; 1 bytes @ 0x1C
   669  003C                     	ds	1
   670  003D                     main@hour1:	
   671                           
   672                           ; 1 bytes @ 0x1D
   673  003D                     	ds	1
   674  003E                     main@date0:	
   675                           
   676                           ; 1 bytes @ 0x1E
   677  003E                     	ds	1
   678  003F                     main@date1:	
   679                           
   680                           ; 1 bytes @ 0x1F
   681  003F                     	ds	1
   682  0040                     main@month0:	
   683                           
   684                           ; 1 bytes @ 0x20
   685  0040                     	ds	1
   686  0041                     main@month1:	
   687                           
   688                           ; 1 bytes @ 0x21
   689  0041                     	ds	1
   690  0042                     main@year0:	
   691                           
   692                           ; 1 bytes @ 0x22
   693  0042                     	ds	1
   694  0043                     main@year1:	
   695                           
   696                           ; 1 bytes @ 0x23
   697  0043                     	ds	1
   698                           
   699                           	psect	maintext
   700  062E                     __pmaintext:	
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 224 in file "newmain.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  year1           1   35[BANK0 ] unsigned char 
   711 ;;  year0           1   34[BANK0 ] unsigned char 
   712 ;;  month1          1   33[BANK0 ] unsigned char 
   713 ;;  month0          1   32[BANK0 ] unsigned char 
   714 ;;  date1           1   31[BANK0 ] unsigned char 
   715 ;;  date0           1   30[BANK0 ] unsigned char 
   716 ;;  hour1           1   29[BANK0 ] unsigned char 
   717 ;;  hour0           1   28[BANK0 ] unsigned char 
   718 ;;  min1            1   27[BANK0 ] unsigned char 
   719 ;;  min0            1   26[BANK0 ] unsigned char 
   720 ;;  sec1            1   25[BANK0 ] unsigned char 
   721 ;;  sec0            1   24[BANK0 ] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : B00/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         0      12       0       0       0
   733 ;;      Temps:          0       3       0       0       0
   734 ;;      Totals:         0      15       0       0       0
   735 ;;Total ram usage:       15 bytes
   736 ;; Hardware stack levels required when called:    3
   737 ;; This function calls:
   738 ;;		_I2C_Init
   739 ;;		_Lcd_Clear
   740 ;;		_Lcd_Init
   741 ;;		_Lcd_Set_Cursor
   742 ;;		_Lcd_Write_Char
   743 ;;		_Lcd_Write_String
   744 ;;		___awdiv
   745 ;;		___awmod
   746 ;;		_setTime
   747 ;;		_updateTime
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _main
   755  062E                     _main:	
   756  062E                     l1338:	
   757                           ;incstack = 0
   758                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   759                           
   760                           
   761                           ;newmain.c: 226:     TRISD = 0x00;
   762  062E  1683               	bsf	3,5	;RP0=1, select bank1
   763  062F  1303               	bcf	3,6	;RP1=0, select bank1
   764  0630  0188               	clrf	8	;volatile
   765  0631                     l1340:	
   766                           
   767                           ;newmain.c: 227:     Lcd_Init();
   768  0631  120A  118A  2367  120A  118A  	fcall	_Lcd_Init
   769  0636                     l1342:	
   770                           
   771                           ;newmain.c: 228:     I2C_Init(100);
   772  0636  3000               	movlw	0
   773  0637  1283               	bcf	3,5	;RP0=0, select bank0
   774  0638  1303               	bcf	3,6	;RP1=0, select bank0
   775  0639  00B0               	movwf	I2C_Init@freq+3
   776  063A  3000               	movlw	0
   777  063B  00AF               	movwf	I2C_Init@freq+2
   778  063C  3000               	movlw	0
   779  063D  00AE               	movwf	I2C_Init@freq+1
   780  063E  3064               	movlw	100
   781  063F  00AD               	movwf	I2C_Init@freq
   782  0640  120A  118A  22BB  120A  118A  	fcall	_I2C_Init
   783  0645                     l1344:	
   784                           
   785                           ;newmain.c: 229:     setTime();
   786  0645  120A  118A  2493  120A  118A  	fcall	_setTime
   787  064A                     l1346:	
   788                           
   789                           ;newmain.c: 233:         updateTime();
   790  064A  120A  118A  2542  120A  118A  	fcall	_updateTime
   791  064F                     l1348:	
   792                           
   793                           ;newmain.c: 234:         char sec0 = sec%10;
   794  064F  300A               	movlw	10
   795  0650  00F0               	movwf	___awmod@divisor
   796  0651  3000               	movlw	0
   797  0652  00F1               	movwf	___awmod@divisor+1
   798  0653  1283               	bcf	3,5	;RP0=0, select bank0
   799  0654  1303               	bcf	3,6	;RP1=0, select bank0
   800  0655  0845               	movf	_sec+1,w
   801  0656  00F3               	movwf	___awmod@dividend+1
   802  0657  0844               	movf	_sec,w
   803  0658  00F2               	movwf	___awmod@dividend
   804  0659  120A  118A  230E  120A  118A  	fcall	___awmod
   805  065E  0870               	movf	?___awmod,w
   806  065F  1283               	bcf	3,5	;RP0=0, select bank0
   807  0660  1303               	bcf	3,6	;RP1=0, select bank0
   808  0661  00B5               	movwf	??_main
   809  0662  0835               	movf	??_main,w
   810  0663  00B8               	movwf	main@sec0
   811  0664                     l1350:	
   812                           
   813                           ;newmain.c: 235:         char sec1 = (sec/10);
   814  0664  300A               	movlw	10
   815  0665  00F0               	movwf	___awdiv@divisor
   816  0666  3000               	movlw	0
   817  0667  00F1               	movwf	___awdiv@divisor+1
   818  0668  0845               	movf	_sec+1,w
   819  0669  00F3               	movwf	___awdiv@dividend+1
   820  066A  0844               	movf	_sec,w
   821  066B  00F2               	movwf	___awdiv@dividend
   822  066C  120A  118A  23C4  120A  118A  	fcall	___awdiv
   823  0671  0870               	movf	?___awdiv,w
   824  0672  1283               	bcf	3,5	;RP0=0, select bank0
   825  0673  1303               	bcf	3,6	;RP1=0, select bank0
   826  0674  00B5               	movwf	??_main
   827  0675  0835               	movf	??_main,w
   828  0676  00B9               	movwf	main@sec1
   829  0677                     l1352:	
   830                           
   831                           ;newmain.c: 236:         char min0 = min%10;
   832  0677  300A               	movlw	10
   833  0678  00F0               	movwf	___awmod@divisor
   834  0679  3000               	movlw	0
   835  067A  00F1               	movwf	___awmod@divisor+1
   836  067B  084F               	movf	_min+1,w
   837  067C  00F3               	movwf	___awmod@dividend+1
   838  067D  084E               	movf	_min,w
   839  067E  00F2               	movwf	___awmod@dividend
   840  067F  120A  118A  230E  120A  118A  	fcall	___awmod
   841  0684  0870               	movf	?___awmod,w
   842  0685  1283               	bcf	3,5	;RP0=0, select bank0
   843  0686  1303               	bcf	3,6	;RP1=0, select bank0
   844  0687  00B5               	movwf	??_main
   845  0688  0835               	movf	??_main,w
   846  0689  00BA               	movwf	main@min0
   847  068A                     l1354:	
   848                           
   849                           ;newmain.c: 237:         char min1 = min/10;
   850  068A  300A               	movlw	10
   851  068B  00F0               	movwf	___awdiv@divisor
   852  068C  3000               	movlw	0
   853  068D  00F1               	movwf	___awdiv@divisor+1
   854  068E  084F               	movf	_min+1,w
   855  068F  00F3               	movwf	___awdiv@dividend+1
   856  0690  084E               	movf	_min,w
   857  0691  00F2               	movwf	___awdiv@dividend
   858  0692  120A  118A  23C4  120A  118A  	fcall	___awdiv
   859  0697  0870               	movf	?___awdiv,w
   860  0698  1283               	bcf	3,5	;RP0=0, select bank0
   861  0699  1303               	bcf	3,6	;RP1=0, select bank0
   862  069A  00B5               	movwf	??_main
   863  069B  0835               	movf	??_main,w
   864  069C  00BB               	movwf	main@min1
   865  069D                     l1356:	
   866                           
   867                           ;newmain.c: 238:         char hour0 = hour%10;
   868  069D  300A               	movlw	10
   869  069E  00F0               	movwf	___awmod@divisor
   870  069F  3000               	movlw	0
   871  06A0  00F1               	movwf	___awmod@divisor+1
   872  06A1  0847               	movf	_hour+1,w
   873  06A2  00F3               	movwf	___awmod@dividend+1
   874  06A3  0846               	movf	_hour,w
   875  06A4  00F2               	movwf	___awmod@dividend
   876  06A5  120A  118A  230E  120A  118A  	fcall	___awmod
   877  06AA  0870               	movf	?___awmod,w
   878  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   879  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   880  06AD  00B5               	movwf	??_main
   881  06AE  0835               	movf	??_main,w
   882  06AF  00BC               	movwf	main@hour0
   883  06B0                     l1358:	
   884                           
   885                           ;newmain.c: 239:         char hour1 = hour/10;
   886  06B0  300A               	movlw	10
   887  06B1  00F0               	movwf	___awdiv@divisor
   888  06B2  3000               	movlw	0
   889  06B3  00F1               	movwf	___awdiv@divisor+1
   890  06B4  0847               	movf	_hour+1,w
   891  06B5  00F3               	movwf	___awdiv@dividend+1
   892  06B6  0846               	movf	_hour,w
   893  06B7  00F2               	movwf	___awdiv@dividend
   894  06B8  120A  118A  23C4  120A  118A  	fcall	___awdiv
   895  06BD  0870               	movf	?___awdiv,w
   896  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   897  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   898  06C0  00B5               	movwf	??_main
   899  06C1  0835               	movf	??_main,w
   900  06C2  00BD               	movwf	main@hour1
   901  06C3                     l1360:	
   902                           
   903                           ;newmain.c: 240:         char date0 = date%10;
   904  06C3  300A               	movlw	10
   905  06C4  00F0               	movwf	___awmod@divisor
   906  06C5  3000               	movlw	0
   907  06C6  00F1               	movwf	___awmod@divisor+1
   908  06C7  0849               	movf	_date+1,w
   909  06C8  00F3               	movwf	___awmod@dividend+1
   910  06C9  0848               	movf	_date,w
   911  06CA  00F2               	movwf	___awmod@dividend
   912  06CB  120A  118A  230E  120A  118A  	fcall	___awmod
   913  06D0  0870               	movf	?___awmod,w
   914  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   915  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   916  06D3  00B5               	movwf	??_main
   917  06D4  0835               	movf	??_main,w
   918  06D5  00BE               	movwf	main@date0
   919  06D6                     l1362:	
   920                           
   921                           ;newmain.c: 241:         char date1 = date/10;
   922  06D6  300A               	movlw	10
   923  06D7  00F0               	movwf	___awdiv@divisor
   924  06D8  3000               	movlw	0
   925  06D9  00F1               	movwf	___awdiv@divisor+1
   926  06DA  0849               	movf	_date+1,w
   927  06DB  00F3               	movwf	___awdiv@dividend+1
   928  06DC  0848               	movf	_date,w
   929  06DD  00F2               	movwf	___awdiv@dividend
   930  06DE  120A  118A  23C4  120A  118A  	fcall	___awdiv
   931  06E3  0870               	movf	?___awdiv,w
   932  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   933  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   934  06E6  00B5               	movwf	??_main
   935  06E7  0835               	movf	??_main,w
   936  06E8  00BF               	movwf	main@date1
   937  06E9                     l1364:	
   938                           
   939                           ;newmain.c: 242:         char month0 = month%10;
   940  06E9  300A               	movlw	10
   941  06EA  00F0               	movwf	___awmod@divisor
   942  06EB  3000               	movlw	0
   943  06EC  00F1               	movwf	___awmod@divisor+1
   944  06ED  084B               	movf	_month+1,w
   945  06EE  00F3               	movwf	___awmod@dividend+1
   946  06EF  084A               	movf	_month,w
   947  06F0  00F2               	movwf	___awmod@dividend
   948  06F1  120A  118A  230E  120A  118A  	fcall	___awmod
   949  06F6  0870               	movf	?___awmod,w
   950  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   951  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   952  06F9  00B5               	movwf	??_main
   953  06FA  0835               	movf	??_main,w
   954  06FB  00C0               	movwf	main@month0
   955  06FC                     l1366:	
   956                           
   957                           ;newmain.c: 243:         char month1 = month/10;
   958  06FC  300A               	movlw	10
   959  06FD  00F0               	movwf	___awdiv@divisor
   960  06FE  3000               	movlw	0
   961  06FF  00F1               	movwf	___awdiv@divisor+1
   962  0700  084B               	movf	_month+1,w
   963  0701  00F3               	movwf	___awdiv@dividend+1
   964  0702  084A               	movf	_month,w
   965  0703  00F2               	movwf	___awdiv@dividend
   966  0704  120A  118A  23C4  120A  118A  	fcall	___awdiv
   967  0709  0870               	movf	?___awdiv,w
   968  070A  1283               	bcf	3,5	;RP0=0, select bank0
   969  070B  1303               	bcf	3,6	;RP1=0, select bank0
   970  070C  00B5               	movwf	??_main
   971  070D  0835               	movf	??_main,w
   972  070E  00C1               	movwf	main@month1
   973  070F                     l1368:	
   974                           
   975                           ;newmain.c: 244:         char year0 = year%10;
   976  070F  300A               	movlw	10
   977  0710  00F0               	movwf	___awmod@divisor
   978  0711  3000               	movlw	0
   979  0712  00F1               	movwf	___awmod@divisor+1
   980  0713  084D               	movf	_year+1,w
   981  0714  00F3               	movwf	___awmod@dividend+1
   982  0715  084C               	movf	_year,w
   983  0716  00F2               	movwf	___awmod@dividend
   984  0717  120A  118A  230E  120A  118A  	fcall	___awmod
   985  071C  0870               	movf	?___awmod,w
   986  071D  1283               	bcf	3,5	;RP0=0, select bank0
   987  071E  1303               	bcf	3,6	;RP1=0, select bank0
   988  071F  00B5               	movwf	??_main
   989  0720  0835               	movf	??_main,w
   990  0721  00C2               	movwf	main@year0
   991  0722                     l1370:	
   992                           
   993                           ;newmain.c: 245:         char year1 = year/10;
   994  0722  300A               	movlw	10
   995  0723  00F0               	movwf	___awdiv@divisor
   996  0724  3000               	movlw	0
   997  0725  00F1               	movwf	___awdiv@divisor+1
   998  0726  084D               	movf	_year+1,w
   999  0727  00F3               	movwf	___awdiv@dividend+1
  1000  0728  084C               	movf	_year,w
  1001  0729  00F2               	movwf	___awdiv@dividend
  1002  072A  120A  118A  23C4  120A  118A  	fcall	___awdiv
  1003  072F  0870               	movf	?___awdiv,w
  1004  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0732  00B5               	movwf	??_main
  1007  0733  0835               	movf	??_main,w
  1008  0734  00C3               	movwf	main@year1
  1009  0735                     l1372:	
  1010                           
  1011                           ;newmain.c: 247:         Lcd_Clear();
  1012  0735  120A  118A  20B5  120A  118A  	fcall	_Lcd_Clear
  1013  073A                     l1374:	
  1014                           
  1015                           ;newmain.c: 248:         Lcd_Set_Cursor(1,1);
  1016  073A  01F4               	clrf	Lcd_Set_Cursor@b
  1017  073B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1018  073C  3001               	movlw	1
  1019  073D  120A  118A  2269  120A  118A  	fcall	_Lcd_Set_Cursor
  1020  0742                     l1376:	
  1021                           
  1022                           ;newmain.c: 249:         Lcd_Write_String("Time: ");
  1023  0742  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1024  0743  120A  118A  211E  120A  118A  	fcall	_Lcd_Write_String
  1025  0748                     l1378:	
  1026                           
  1027                           ;newmain.c: 250:         Lcd_Write_Char(hour1+'0');
  1028  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1030  074A  083D               	movf	main@hour1,w
  1031  074B  3E30               	addlw	48
  1032  074C  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1033  0751                     l1380:	
  1034                           
  1035                           ;newmain.c: 251:         Lcd_Write_Char(hour0+'0');
  1036  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0753  083C               	movf	main@hour0,w
  1039  0754  3E30               	addlw	48
  1040  0755  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1041  075A                     l1382:	
  1042                           
  1043                           ;newmain.c: 252:         Lcd_Write_Char(':');
  1044  075A  303A               	movlw	58
  1045  075B  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1046  0760                     l1384:	
  1047                           
  1048                           ;newmain.c: 253:         Lcd_Write_Char(min1+'0');
  1049  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0762  083B               	movf	main@min1,w
  1052  0763  3E30               	addlw	48
  1053  0764  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1054  0769                     l1386:	
  1055                           
  1056                           ;newmain.c: 254:         Lcd_Write_Char(min0+'0');
  1057  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1058  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1059  076B  083A               	movf	main@min0,w
  1060  076C  3E30               	addlw	48
  1061  076D  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1062  0772                     l1388:	
  1063                           
  1064                           ;newmain.c: 255:         Lcd_Write_Char(':');
  1065  0772  303A               	movlw	58
  1066  0773  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1067  0778                     l1390:	
  1068                           
  1069                           ;newmain.c: 256:         Lcd_Write_Char(sec1+'0');
  1070  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1072  077A  0839               	movf	main@sec1,w
  1073  077B  3E30               	addlw	48
  1074  077C  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1075  0781                     l1392:	
  1076                           
  1077                           ;newmain.c: 257:         Lcd_Write_Char(sec0+'0');
  1078  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0783  0838               	movf	main@sec0,w
  1081  0784  3E30               	addlw	48
  1082  0785  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1083  078A                     l1394:	
  1084                           
  1085                           ;newmain.c: 259:         Lcd_Set_Cursor(2,1);
  1086  078A  01F4               	clrf	Lcd_Set_Cursor@b
  1087  078B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1088  078C  3002               	movlw	2
  1089  078D  120A  118A  2269  120A  118A  	fcall	_Lcd_Set_Cursor
  1090  0792                     l1396:	
  1091                           
  1092                           ;newmain.c: 260:         Lcd_Write_String("Date: ");
  1093  0792  3008               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1094  0793  120A  118A  211E  120A  118A  	fcall	_Lcd_Write_String
  1095  0798                     l1398:	
  1096                           
  1097                           ;newmain.c: 261:         Lcd_Write_Char(date1+'0');
  1098  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1100  079A  083F               	movf	main@date1,w
  1101  079B  3E30               	addlw	48
  1102  079C  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1103  07A1                     l1400:	
  1104                           
  1105                           ;newmain.c: 262:         Lcd_Write_Char(date0+'0');
  1106  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1107  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1108  07A3  083E               	movf	main@date0,w
  1109  07A4  3E30               	addlw	48
  1110  07A5  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1111  07AA                     l1402:	
  1112                           
  1113                           ;newmain.c: 263:         Lcd_Write_Char(':');
  1114  07AA  303A               	movlw	58
  1115  07AB  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1116  07B0                     l1404:	
  1117                           
  1118                           ;newmain.c: 264:         Lcd_Write_Char(month1+'0');
  1119  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1120  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1121  07B2  0841               	movf	main@month1,w
  1122  07B3  3E30               	addlw	48
  1123  07B4  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1124  07B9                     l1406:	
  1125                           
  1126                           ;newmain.c: 265:         Lcd_Write_Char(month0+'0');
  1127  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1128  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1129  07BB  0840               	movf	main@month0,w
  1130  07BC  3E30               	addlw	48
  1131  07BD  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1132  07C2                     l1408:	
  1133                           
  1134                           ;newmain.c: 266:         Lcd_Write_Char(':');
  1135  07C2  303A               	movlw	58
  1136  07C3  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1137  07C8                     l1410:	
  1138                           
  1139                           ;newmain.c: 267:         Lcd_Write_Char(year1+'0');
  1140  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1141  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1142  07CA  0843               	movf	main@year1,w
  1143  07CB  3E30               	addlw	48
  1144  07CC  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1145  07D1                     l1412:	
  1146                           
  1147                           ;newmain.c: 268:         Lcd_Write_Char(year0+'0');
  1148  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1149  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1150  07D3  0842               	movf	main@year0,w
  1151  07D4  3E30               	addlw	48
  1152  07D5  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  1153  07DA                     l1414:	
  1154                           
  1155                           ;newmain.c: 269:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1156  07DA  3006               	movlw	6
  1157  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1158  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1159  07DD  00B7               	movwf	??_main+2
  1160  07DE  3013               	movlw	19
  1161  07DF  00B6               	movwf	??_main+1
  1162  07E0  30AD               	movlw	173
  1163  07E1  00B5               	movwf	??_main
  1164  07E2                     u1017:	
  1165  07E2  0BB5               	decfsz	??_main,f
  1166  07E3  2FE2               	goto	u1017
  1167  07E4  0BB6               	decfsz	??_main+1,f
  1168  07E5  2FE2               	goto	u1017
  1169  07E6  0BB7               	decfsz	??_main+2,f
  1170  07E7  2FE2               	goto	u1017
  1171  07E8  2E4A               	goto	l1346
  1172  07E9  120A  118A  2800   	ljmp	start
  1173  07EC                     __end_of_main:	
  1174                           
  1175                           	psect	text1
  1176  0542                     __ptext1:	
  1177 ;; *************** function _updateTime *****************
  1178 ;; Defined at:
  1179 ;;		line 200 in file "newmain.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		_I2C_Begin
  1202 ;;		_I2C_End
  1203 ;;		_I2C_Read
  1204 ;;		_I2C_Write
  1205 ;;		_b2d
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _updateTime
  1213  0542                     _updateTime:	
  1214  0542                     l1336:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _updateTime: [wreg+status,2+status,0+pclath+cstack]
  1217                           
  1218                           
  1219                           ;newmain.c: 201:     I2C_Begin();
  1220  0542  120A  118A  208F  120A  118A  	fcall	_I2C_Begin
  1221                           
  1222                           ;newmain.c: 202:     I2C_Write(0xD0);
  1223  0547  30D0               	movlw	208
  1224  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1226  054A  00A0               	movwf	I2C_Write@data
  1227  054B  3000               	movlw	0
  1228  054C  00A1               	movwf	I2C_Write@data+1
  1229  054D  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1230                           
  1231                           ;newmain.c: 203:     I2C_Write(0);
  1232  0552  3000               	movlw	0
  1233  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0555  00A0               	movwf	I2C_Write@data
  1236  0556  00A1               	movwf	I2C_Write@data+1
  1237  0557  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1238                           
  1239                           ;newmain.c: 204:     I2C_End();
  1240  055C  120A  118A  2098  120A  118A  	fcall	_I2C_End
  1241                           
  1242                           ;newmain.c: 206:     I2C_Begin();
  1243  0561  120A  118A  208F  120A  118A  	fcall	_I2C_Begin
  1244                           
  1245                           ;newmain.c: 207:     I2C_Write(0xD1);
  1246  0566  30D1               	movlw	209
  1247  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0569  00A0               	movwf	I2C_Write@data
  1250  056A  3000               	movlw	0
  1251  056B  00A1               	movwf	I2C_Write@data+1
  1252  056C  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1253                           
  1254                           ;newmain.c: 208:     sec = b2d(I2C_Read(1));
  1255  0571  3001               	movlw	1
  1256  0572  00F0               	movwf	I2C_Read@ack
  1257  0573  3000               	movlw	0
  1258  0574  00F1               	movwf	I2C_Read@ack+1
  1259  0575  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1260  057A  0871               	movf	?_I2C_Read+1,w
  1261  057B  00F7               	movwf	b2d@to_convert+1
  1262  057C  0870               	movf	?_I2C_Read,w
  1263  057D  00F6               	movwf	b2d@to_convert
  1264  057E  120A  118A  2168  120A  118A  	fcall	_b2d
  1265  0583  0877               	movf	?_b2d+1,w
  1266  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0586  00C5               	movwf	_sec+1
  1269  0587  0876               	movf	?_b2d,w
  1270  0588  00C4               	movwf	_sec
  1271                           
  1272                           ;newmain.c: 209:     min = b2d(I2C_Read(1));
  1273  0589  3001               	movlw	1
  1274  058A  00F0               	movwf	I2C_Read@ack
  1275  058B  3000               	movlw	0
  1276  058C  00F1               	movwf	I2C_Read@ack+1
  1277  058D  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1278  0592  0871               	movf	?_I2C_Read+1,w
  1279  0593  00F7               	movwf	b2d@to_convert+1
  1280  0594  0870               	movf	?_I2C_Read,w
  1281  0595  00F6               	movwf	b2d@to_convert
  1282  0596  120A  118A  2168  120A  118A  	fcall	_b2d
  1283  059B  0877               	movf	?_b2d+1,w
  1284  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1285  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1286  059E  00CF               	movwf	_min+1
  1287  059F  0876               	movf	?_b2d,w
  1288  05A0  00CE               	movwf	_min
  1289                           
  1290                           ;newmain.c: 210:     hour = b2d(I2C_Read(1));
  1291  05A1  3001               	movlw	1
  1292  05A2  00F0               	movwf	I2C_Read@ack
  1293  05A3  3000               	movlw	0
  1294  05A4  00F1               	movwf	I2C_Read@ack+1
  1295  05A5  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1296  05AA  0871               	movf	?_I2C_Read+1,w
  1297  05AB  00F7               	movwf	b2d@to_convert+1
  1298  05AC  0870               	movf	?_I2C_Read,w
  1299  05AD  00F6               	movwf	b2d@to_convert
  1300  05AE  120A  118A  2168  120A  118A  	fcall	_b2d
  1301  05B3  0877               	movf	?_b2d+1,w
  1302  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05B6  00C7               	movwf	_hour+1
  1305  05B7  0876               	movf	?_b2d,w
  1306  05B8  00C6               	movwf	_hour
  1307                           
  1308                           ;newmain.c: 211:     I2C_Read(1);
  1309  05B9  3001               	movlw	1
  1310  05BA  00F0               	movwf	I2C_Read@ack
  1311  05BB  3000               	movlw	0
  1312  05BC  00F1               	movwf	I2C_Read@ack+1
  1313  05BD  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1314                           
  1315                           ;newmain.c: 212:     date = b2d(I2C_Read(1));
  1316  05C2  3001               	movlw	1
  1317  05C3  00F0               	movwf	I2C_Read@ack
  1318  05C4  3000               	movlw	0
  1319  05C5  00F1               	movwf	I2C_Read@ack+1
  1320  05C6  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1321  05CB  0871               	movf	?_I2C_Read+1,w
  1322  05CC  00F7               	movwf	b2d@to_convert+1
  1323  05CD  0870               	movf	?_I2C_Read,w
  1324  05CE  00F6               	movwf	b2d@to_convert
  1325  05CF  120A  118A  2168  120A  118A  	fcall	_b2d
  1326  05D4  0877               	movf	?_b2d+1,w
  1327  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1328  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1329  05D7  00C9               	movwf	_date+1
  1330  05D8  0876               	movf	?_b2d,w
  1331  05D9  00C8               	movwf	_date
  1332                           
  1333                           ;newmain.c: 213:     month = b2d(I2C_Read(1));
  1334  05DA  3001               	movlw	1
  1335  05DB  00F0               	movwf	I2C_Read@ack
  1336  05DC  3000               	movlw	0
  1337  05DD  00F1               	movwf	I2C_Read@ack+1
  1338  05DE  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1339  05E3  0871               	movf	?_I2C_Read+1,w
  1340  05E4  00F7               	movwf	b2d@to_convert+1
  1341  05E5  0870               	movf	?_I2C_Read,w
  1342  05E6  00F6               	movwf	b2d@to_convert
  1343  05E7  120A  118A  2168  120A  118A  	fcall	_b2d
  1344  05EC  0877               	movf	?_b2d+1,w
  1345  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1346  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1347  05EF  00CB               	movwf	_month+1
  1348  05F0  0876               	movf	?_b2d,w
  1349  05F1  00CA               	movwf	_month
  1350                           
  1351                           ;newmain.c: 214:     year = b2d(I2C_Read(1));
  1352  05F2  3001               	movlw	1
  1353  05F3  00F0               	movwf	I2C_Read@ack
  1354  05F4  3000               	movlw	0
  1355  05F5  00F1               	movwf	I2C_Read@ack+1
  1356  05F6  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1357  05FB  0871               	movf	?_I2C_Read+1,w
  1358  05FC  00F7               	movwf	b2d@to_convert+1
  1359  05FD  0870               	movf	?_I2C_Read,w
  1360  05FE  00F6               	movwf	b2d@to_convert
  1361  05FF  120A  118A  2168  120A  118A  	fcall	_b2d
  1362  0604  0877               	movf	?_b2d+1,w
  1363  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0607  00CD               	movwf	_year+1
  1366  0608  0876               	movf	?_b2d,w
  1367  0609  00CC               	movwf	_year
  1368                           
  1369                           ;newmain.c: 215:     I2C_End();
  1370  060A  120A  118A  2098  120A  118A  	fcall	_I2C_End
  1371                           
  1372                           ;newmain.c: 217:     I2C_Begin();
  1373  060F  120A  118A  208F  120A  118A  	fcall	_I2C_Begin
  1374                           
  1375                           ;newmain.c: 218:     I2C_Write(0xD1);
  1376  0614  30D1               	movlw	209
  1377  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0617  00A0               	movwf	I2C_Write@data
  1380  0618  3000               	movlw	0
  1381  0619  00A1               	movwf	I2C_Write@data+1
  1382  061A  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1383                           
  1384                           ;newmain.c: 219:     I2C_Read(1);
  1385  061F  3001               	movlw	1
  1386  0620  00F0               	movwf	I2C_Read@ack
  1387  0621  3000               	movlw	0
  1388  0622  00F1               	movwf	I2C_Read@ack+1
  1389  0623  120A  118A  218D  120A  118A  	fcall	_I2C_Read
  1390                           
  1391                           ;newmain.c: 220:     I2C_End();
  1392  0628  120A  118A  2098  120A  118A  	fcall	_I2C_End
  1393  062D                     l120:	
  1394  062D  0008               	return
  1395  062E                     __end_of_updateTime:	
  1396                           
  1397                           	psect	text2
  1398  0168                     __ptext2:	
  1399 ;; *************** function _b2d *****************
  1400 ;; Defined at:
  1401 ;;		line 178 in file "newmain.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  to_convert      2    6[COMMON] int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2    6[COMMON] int 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         2       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          2       0       0       0       0
  1418 ;;      Totals:         4       0       0       0       0
  1419 ;;Total ram usage:        4 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		___wmul
  1424 ;; This function is called by:
  1425 ;;		_updateTime
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _b2d
  1431  0168                     _b2d:	
  1432  0168                     l1238:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _b2d: [wreg+status,2+status,0+pclath+cstack]
  1435                           
  1436                           
  1437                           ;newmain.c: 179:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  1438  0168  300F               	movlw	15
  1439  0169  0576               	andwf	b2d@to_convert,w
  1440  016A  00F8               	movwf	??_b2d
  1441  016B  3000               	movlw	0
  1442  016C  0577               	andwf	b2d@to_convert+1,w
  1443  016D  00F9               	movwf	??_b2d+1
  1444  016E  0E76               	swapf	b2d@to_convert,w
  1445  016F  390F               	andlw	15
  1446  0170  00F0               	movwf	___wmul@multiplier
  1447  0171  0E77               	swapf	b2d@to_convert+1,w
  1448  0172  39F0               	andlw	240
  1449  0173  04F0               	iorwf	___wmul@multiplier,f
  1450  0174  0E77               	swapf	b2d@to_convert+1,w
  1451  0175  390F               	andlw	15
  1452  0176  00F1               	movwf	___wmul@multiplier+1
  1453  0177  30F0               	movlw	240
  1454  0178  1DF1               	btfss	___wmul@multiplier+1,3
  1455  0179  3000               	movlw	0
  1456  017A  04F1               	iorwf	___wmul@multiplier+1,f
  1457  017B  300A               	movlw	10
  1458  017C  00F2               	movwf	___wmul@multiplicand
  1459  017D  3000               	movlw	0
  1460  017E  00F3               	movwf	___wmul@multiplicand+1
  1461  017F  120A  118A  2143  120A  118A  	fcall	___wmul
  1462  0184  0878               	movf	??_b2d,w
  1463  0185  0770               	addwf	?___wmul,w
  1464  0186  00F6               	movwf	?_b2d
  1465  0187  0879               	movf	??_b2d+1,w
  1466  0188  1803               	skipnc
  1467  0189  0A79               	incf	??_b2d+1,w
  1468  018A  0771               	addwf	?___wmul+1,w
  1469  018B  00F7               	movwf	?_b2d+1
  1470  018C                     l111:	
  1471  018C  0008               	return
  1472  018D                     __end_of_b2d:	
  1473                           
  1474                           	psect	text3
  1475  0143                     __ptext3:	
  1476 ;; *************** function ___wmul *****************
  1477 ;; Defined at:
  1478 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  multiplier      2    0[COMMON] unsigned int 
  1481 ;;  multiplicand    2    2[COMMON] unsigned int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  product         2    4[COMMON] unsigned int 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2    0[COMMON] unsigned int 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         4       0       0       0       0
  1494 ;;      Locals:         2       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0
  1496 ;;      Totals:         6       0       0       0       0
  1497 ;;Total ram usage:        6 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_b2d
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function ___wmul
  1508  0143                     ___wmul:	
  1509  0143                     l1084:	
  1510                           ;incstack = 0
  1511                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1512                           
  1513  0143  01F4               	clrf	___wmul@product
  1514  0144  01F5               	clrf	___wmul@product+1
  1515  0145                     l1086:	
  1516  0145  1C70               	btfss	___wmul@multiplier,0
  1517  0146  2948               	goto	u571
  1518  0147  2949               	goto	u570
  1519  0148                     u571:	
  1520  0148  294F               	goto	l214
  1521  0149                     u570:	
  1522  0149                     l1088:	
  1523  0149  0872               	movf	___wmul@multiplicand,w
  1524  014A  07F4               	addwf	___wmul@product,f
  1525  014B  1803               	skipnc
  1526  014C  0AF5               	incf	___wmul@product+1,f
  1527  014D  0873               	movf	___wmul@multiplicand+1,w
  1528  014E  07F5               	addwf	___wmul@product+1,f
  1529  014F                     l214:	
  1530  014F  3001               	movlw	1
  1531  0150                     u585:	
  1532  0150  1003               	clrc
  1533  0151  0DF2               	rlf	___wmul@multiplicand,f
  1534  0152  0DF3               	rlf	___wmul@multiplicand+1,f
  1535  0153  3EFF               	addlw	-1
  1536  0154  1D03               	skipz
  1537  0155  2950               	goto	u585
  1538  0156                     l1090:	
  1539  0156  3001               	movlw	1
  1540  0157                     u595:	
  1541  0157  1003               	clrc
  1542  0158  0CF1               	rrf	___wmul@multiplier+1,f
  1543  0159  0CF0               	rrf	___wmul@multiplier,f
  1544  015A  3EFF               	addlw	-1
  1545  015B  1D03               	skipz
  1546  015C  2957               	goto	u595
  1547  015D                     l1092:	
  1548  015D  0870               	movf	___wmul@multiplier,w
  1549  015E  0471               	iorwf	___wmul@multiplier+1,w
  1550  015F  1D03               	btfss	3,2
  1551  0160  2962               	goto	u601
  1552  0161  2963               	goto	u600
  1553  0162                     u601:	
  1554  0162  2945               	goto	l1086
  1555  0163                     u600:	
  1556  0163                     l1094:	
  1557  0163  0875               	movf	___wmul@product+1,w
  1558  0164  00F1               	movwf	?___wmul+1
  1559  0165  0874               	movf	___wmul@product,w
  1560  0166  00F0               	movwf	?___wmul
  1561  0167                     l216:	
  1562  0167  0008               	return
  1563  0168                     __end_of___wmul:	
  1564                           
  1565                           	psect	text4
  1566  018D                     __ptext4:	
  1567 ;; *************** function _I2C_Read *****************
  1568 ;; Defined at:
  1569 ;;		line 72 in file "newmain.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  ack             2    0[COMMON] unsigned short 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  incoming        2    4[COMMON] unsigned short 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    0[COMMON] unsigned short 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         2       0       0       0       0
  1584 ;;      Locals:         2       0       0       0       0
  1585 ;;      Temps:          2       0       0       0       0
  1586 ;;      Totals:         6       0       0       0       0
  1587 ;;Total ram usage:        6 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		_I2C_Hold
  1592 ;; This function is called by:
  1593 ;;		_updateTime
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _I2C_Read
  1599  018D                     _I2C_Read:	
  1600  018D                     l1192:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1603                           
  1604                           
  1605                           ;newmain.c: 73:   unsigned short incoming;;newmain.c: 74:   I2C_Hold();
  1606  018D  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  1607  0192                     l1194:	
  1608                           
  1609                           ;newmain.c: 75:   RCEN = 1;
  1610  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0194  1591               	bsf	17,3	;volatile
  1613                           
  1614                           ;newmain.c: 77:   I2C_Hold();
  1615  0195  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  1616  019A                     l1196:	
  1617                           
  1618                           ;newmain.c: 78:   incoming = SSPBUF;
  1619  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1620  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1621  019C  0813               	movf	19,w	;volatile
  1622  019D  00F2               	movwf	??_I2C_Read
  1623  019E  01F3               	clrf	??_I2C_Read+1
  1624  019F  0872               	movf	??_I2C_Read,w
  1625  01A0  00F4               	movwf	I2C_Read@incoming
  1626  01A1  0873               	movf	??_I2C_Read+1,w
  1627  01A2  00F5               	movwf	I2C_Read@incoming+1
  1628  01A3                     l1198:	
  1629                           
  1630                           ;newmain.c: 80:   I2C_Hold();
  1631  01A3  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  1632  01A8                     l1200:	
  1633                           
  1634                           ;newmain.c: 81:   ACKDT = (ack)?0:1;
  1635  01A8  0870               	movf	I2C_Read@ack,w
  1636  01A9  0471               	iorwf	I2C_Read@ack+1,w
  1637  01AA  1903               	btfsc	3,2
  1638  01AB  29AD               	goto	u801
  1639  01AC  29B1               	goto	u800
  1640  01AD                     u801:	
  1641  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1642  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1643  01AF  1691               	bsf	17,5	;volatile
  1644  01B0  29B4               	goto	u814
  1645  01B1                     u800:	
  1646  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  1647  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  1648  01B3  1291               	bcf	17,5	;volatile
  1649  01B4                     u814:	
  1650  01B4                     l1202:	
  1651                           
  1652                           ;newmain.c: 82:   ACKEN = 1;
  1653  01B4  1611               	bsf	17,4	;volatile
  1654  01B5                     l1204:	
  1655                           
  1656                           ;newmain.c: 84:   return incoming;
  1657  01B5  0875               	movf	I2C_Read@incoming+1,w
  1658  01B6  00F1               	movwf	?_I2C_Read+1
  1659  01B7  0874               	movf	I2C_Read@incoming,w
  1660  01B8  00F0               	movwf	?_I2C_Read
  1661  01B9                     l73:	
  1662  01B9  0008               	return
  1663  01BA                     __end_of_I2C_Read:	
  1664                           
  1665                           	psect	text5
  1666  0493                     __ptext5:	
  1667 ;; *************** function _setTime *****************
  1668 ;; Defined at:
  1669 ;;		line 186 in file "newmain.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    2
  1690 ;; This function calls:
  1691 ;;		_I2C_Begin
  1692 ;;		_I2C_End
  1693 ;;		_I2C_Write
  1694 ;;		_d2b
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _setTime
  1702  0493                     _setTime:	
  1703  0493                     l1334:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _setTime: [wreg+status,2+status,0+pclath+cstack]
  1706                           
  1707                           
  1708                           ;newmain.c: 187:    I2C_Begin();
  1709  0493  120A  118A  208F  120A  118A  	fcall	_I2C_Begin
  1710                           
  1711                           ;newmain.c: 188:    I2C_Write(0xD0);
  1712  0498  30D0               	movlw	208
  1713  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1714  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1715  049B  00A0               	movwf	I2C_Write@data
  1716  049C  3000               	movlw	0
  1717  049D  00A1               	movwf	I2C_Write@data+1
  1718  049E  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1719                           
  1720                           ;newmain.c: 189:    I2C_Write(0);
  1721  04A3  3000               	movlw	0
  1722  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1723  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1724  04A6  00A0               	movwf	I2C_Write@data
  1725  04A7  00A1               	movwf	I2C_Write@data+1
  1726  04A8  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1727                           
  1728                           ;newmain.c: 190:    I2C_Write(d2b(sec));
  1729  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1730  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1731  04AF  0845               	movf	_sec+1,w
  1732  04B0  00FA               	movwf	d2b@to_convert+1
  1733  04B1  0844               	movf	_sec,w
  1734  04B2  00F9               	movwf	d2b@to_convert
  1735  04B3  120A  118A  21BA  120A  118A  	fcall	_d2b
  1736  04B8  087A               	movf	?_d2b+1,w
  1737  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1738  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1739  04BB  00A1               	movwf	I2C_Write@data+1
  1740  04BC  0879               	movf	?_d2b,w
  1741  04BD  00A0               	movwf	I2C_Write@data
  1742  04BE  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1743                           
  1744                           ;newmain.c: 191:    I2C_Write(d2b(min));
  1745  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1746  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1747  04C5  084F               	movf	_min+1,w
  1748  04C6  00FA               	movwf	d2b@to_convert+1
  1749  04C7  084E               	movf	_min,w
  1750  04C8  00F9               	movwf	d2b@to_convert
  1751  04C9  120A  118A  21BA  120A  118A  	fcall	_d2b
  1752  04CE  087A               	movf	?_d2b+1,w
  1753  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1754  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1755  04D1  00A1               	movwf	I2C_Write@data+1
  1756  04D2  0879               	movf	?_d2b,w
  1757  04D3  00A0               	movwf	I2C_Write@data
  1758  04D4  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1759                           
  1760                           ;newmain.c: 192:    I2C_Write(d2b(hour));
  1761  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1762  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1763  04DB  0847               	movf	_hour+1,w
  1764  04DC  00FA               	movwf	d2b@to_convert+1
  1765  04DD  0846               	movf	_hour,w
  1766  04DE  00F9               	movwf	d2b@to_convert
  1767  04DF  120A  118A  21BA  120A  118A  	fcall	_d2b
  1768  04E4  087A               	movf	?_d2b+1,w
  1769  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1770  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1771  04E7  00A1               	movwf	I2C_Write@data+1
  1772  04E8  0879               	movf	?_d2b,w
  1773  04E9  00A0               	movwf	I2C_Write@data
  1774  04EA  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1775                           
  1776                           ;newmain.c: 193:    I2C_Write(1);
  1777  04EF  3001               	movlw	1
  1778  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1779  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1780  04F2  00A0               	movwf	I2C_Write@data
  1781  04F3  3000               	movlw	0
  1782  04F4  00A1               	movwf	I2C_Write@data+1
  1783  04F5  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1784                           
  1785                           ;newmain.c: 194:    I2C_Write(d2b(date));
  1786  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1787  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1788  04FC  0849               	movf	_date+1,w
  1789  04FD  00FA               	movwf	d2b@to_convert+1
  1790  04FE  0848               	movf	_date,w
  1791  04FF  00F9               	movwf	d2b@to_convert
  1792  0500  120A  118A  21BA  120A  118A  	fcall	_d2b
  1793  0505  087A               	movf	?_d2b+1,w
  1794  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0508  00A1               	movwf	I2C_Write@data+1
  1797  0509  0879               	movf	?_d2b,w
  1798  050A  00A0               	movwf	I2C_Write@data
  1799  050B  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1800                           
  1801                           ;newmain.c: 195:    I2C_Write(d2b(month));
  1802  0510  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0511  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0512  084B               	movf	_month+1,w
  1805  0513  00FA               	movwf	d2b@to_convert+1
  1806  0514  084A               	movf	_month,w
  1807  0515  00F9               	movwf	d2b@to_convert
  1808  0516  120A  118A  21BA  120A  118A  	fcall	_d2b
  1809  051B  087A               	movf	?_d2b+1,w
  1810  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1811  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1812  051E  00A1               	movwf	I2C_Write@data+1
  1813  051F  0879               	movf	?_d2b,w
  1814  0520  00A0               	movwf	I2C_Write@data
  1815  0521  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1816                           
  1817                           ;newmain.c: 196:    I2C_Write(d2b(year));
  1818  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0528  084D               	movf	_year+1,w
  1821  0529  00FA               	movwf	d2b@to_convert+1
  1822  052A  084C               	movf	_year,w
  1823  052B  00F9               	movwf	d2b@to_convert
  1824  052C  120A  118A  21BA  120A  118A  	fcall	_d2b
  1825  0531  087A               	movf	?_d2b+1,w
  1826  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0534  00A1               	movwf	I2C_Write@data+1
  1829  0535  0879               	movf	?_d2b,w
  1830  0536  00A0               	movwf	I2C_Write@data
  1831  0537  120A  118A  20A1  120A  118A  	fcall	_I2C_Write
  1832                           
  1833                           ;newmain.c: 197:    I2C_End();
  1834  053C  120A  118A  2098  120A  118A  	fcall	_I2C_End
  1835  0541                     l117:	
  1836  0541  0008               	return
  1837  0542                     __end_of_setTime:	
  1838                           
  1839                           	psect	text6
  1840  01BA                     __ptext6:	
  1841 ;; *************** function _d2b *****************
  1842 ;; Defined at:
  1843 ;;		line 182 in file "newmain.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  to_convert      2    9[COMMON] int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2    9[COMMON] int 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         2       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0
  1859 ;;      Temps:          2       0       0       0       0
  1860 ;;      Totals:         4       0       0       0       0
  1861 ;;Total ram usage:        4 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    1
  1864 ;; This function calls:
  1865 ;;		___awdiv
  1866 ;;		___awmod
  1867 ;; This function is called by:
  1868 ;;		_setTime
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _d2b
  1874  01BA                     _d2b:	
  1875  01BA                     l1242:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _d2b: [wreg+status,2+status,0+pclath+cstack]
  1878                           
  1879                           
  1880                           ;newmain.c: 183:    return ((to_convert / 10) << 4) + (to_convert % 10);
  1881  01BA  300A               	movlw	10
  1882  01BB  00F0               	movwf	___awdiv@divisor
  1883  01BC  3000               	movlw	0
  1884  01BD  00F1               	movwf	___awdiv@divisor+1
  1885  01BE  087A               	movf	d2b@to_convert+1,w
  1886  01BF  00F3               	movwf	___awdiv@dividend+1
  1887  01C0  0879               	movf	d2b@to_convert,w
  1888  01C1  00F2               	movwf	___awdiv@dividend
  1889  01C2  120A  118A  23C4  120A  118A  	fcall	___awdiv
  1890  01C7  0870               	movf	?___awdiv,w
  1891  01C8  00FB               	movwf	??_d2b
  1892  01C9  0871               	movf	?___awdiv+1,w
  1893  01CA  00FC               	movwf	??_d2b+1
  1894  01CB  0EFB               	swapf	??_d2b,f
  1895  01CC  0EFC               	swapf	??_d2b+1,f
  1896  01CD  30F0               	movlw	240
  1897  01CE  05FC               	andwf	??_d2b+1,f
  1898  01CF  087B               	movf	??_d2b,w
  1899  01D0  390F               	andlw	15
  1900  01D1  04FC               	iorwf	??_d2b+1,f
  1901  01D2  30F0               	movlw	240
  1902  01D3  05FB               	andwf	??_d2b,f
  1903  01D4  300A               	movlw	10
  1904  01D5  00F0               	movwf	___awmod@divisor
  1905  01D6  3000               	movlw	0
  1906  01D7  00F1               	movwf	___awmod@divisor+1
  1907  01D8  087A               	movf	d2b@to_convert+1,w
  1908  01D9  00F3               	movwf	___awmod@dividend+1
  1909  01DA  0879               	movf	d2b@to_convert,w
  1910  01DB  00F2               	movwf	___awmod@dividend
  1911  01DC  120A  118A  230E  120A  118A  	fcall	___awmod
  1912  01E1  0870               	movf	?___awmod,w
  1913  01E2  077B               	addwf	??_d2b,w
  1914  01E3  00F9               	movwf	?_d2b
  1915  01E4  0871               	movf	?___awmod+1,w
  1916  01E5  1803               	skipnc
  1917  01E6  0A71               	incf	?___awmod+1,w
  1918  01E7  077C               	addwf	??_d2b+1,w
  1919  01E8  00FA               	movwf	?_d2b+1
  1920  01E9                     l114:	
  1921  01E9  0008               	return
  1922  01EA                     __end_of_d2b:	
  1923                           
  1924                           	psect	text7
  1925  030E                     __ptext7:	
  1926 ;; *************** function ___awmod *****************
  1927 ;; Defined at:
  1928 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  divisor         2    0[COMMON] int 
  1931 ;;  dividend        2    2[COMMON] int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  sign            1    6[COMMON] unsigned char 
  1934 ;;  counter         1    5[COMMON] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    0[COMMON] int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         4       0       0       0       0
  1945 ;;      Locals:         2       0       0       0       0
  1946 ;;      Temps:          1       0       0       0       0
  1947 ;;      Totals:         7       0       0       0       0
  1948 ;;Total ram usage:        7 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_d2b
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function ___awmod
  1960  030E                     ___awmod:	
  1961  030E                     l1142:	
  1962                           ;incstack = 0
  1963                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1964                           
  1965  030E  01F6               	clrf	___awmod@sign
  1966  030F                     l1144:	
  1967  030F  1FF3               	btfss	___awmod@dividend+1,7
  1968  0310  2B12               	goto	u711
  1969  0311  2B13               	goto	u710
  1970  0312                     u711:	
  1971  0312  2B1A               	goto	l1150
  1972  0313                     u710:	
  1973  0313                     l1146:	
  1974  0313  09F2               	comf	___awmod@dividend,f
  1975  0314  09F3               	comf	___awmod@dividend+1,f
  1976  0315  0AF2               	incf	___awmod@dividend,f
  1977  0316  1903               	skipnz
  1978  0317  0AF3               	incf	___awmod@dividend+1,f
  1979  0318                     l1148:	
  1980  0318  01F6               	clrf	___awmod@sign
  1981  0319  0AF6               	incf	___awmod@sign,f
  1982  031A                     l1150:	
  1983  031A  1FF1               	btfss	___awmod@divisor+1,7
  1984  031B  2B1D               	goto	u721
  1985  031C  2B1E               	goto	u720
  1986  031D                     u721:	
  1987  031D  2B23               	goto	l1154
  1988  031E                     u720:	
  1989  031E                     l1152:	
  1990  031E  09F0               	comf	___awmod@divisor,f
  1991  031F  09F1               	comf	___awmod@divisor+1,f
  1992  0320  0AF0               	incf	___awmod@divisor,f
  1993  0321  1903               	skipnz
  1994  0322  0AF1               	incf	___awmod@divisor+1,f
  1995  0323                     l1154:	
  1996  0323  0870               	movf	___awmod@divisor,w
  1997  0324  0471               	iorwf	___awmod@divisor+1,w
  1998  0325  1903               	btfsc	3,2
  1999  0326  2B28               	goto	u731
  2000  0327  2B29               	goto	u730
  2001  0328                     u731:	
  2002  0328  2B58               	goto	l1172
  2003  0329                     u730:	
  2004  0329                     l1156:	
  2005  0329  01F5               	clrf	___awmod@counter
  2006  032A  0AF5               	incf	___awmod@counter,f
  2007  032B  2B37               	goto	l1162
  2008  032C                     l1158:	
  2009  032C  3001               	movlw	1
  2010  032D                     u745:	
  2011  032D  1003               	clrc
  2012  032E  0DF0               	rlf	___awmod@divisor,f
  2013  032F  0DF1               	rlf	___awmod@divisor+1,f
  2014  0330  3EFF               	addlw	-1
  2015  0331  1D03               	skipz
  2016  0332  2B2D               	goto	u745
  2017  0333                     l1160:	
  2018  0333  3001               	movlw	1
  2019  0334  00F4               	movwf	??___awmod
  2020  0335  0874               	movf	??___awmod,w
  2021  0336  07F5               	addwf	___awmod@counter,f
  2022  0337                     l1162:	
  2023  0337  1FF1               	btfss	___awmod@divisor+1,7
  2024  0338  2B3A               	goto	u751
  2025  0339  2B3B               	goto	u750
  2026  033A                     u751:	
  2027  033A  2B2C               	goto	l1158
  2028  033B                     u750:	
  2029  033B                     l1164:	
  2030  033B  0871               	movf	___awmod@divisor+1,w
  2031  033C  0273               	subwf	___awmod@dividend+1,w
  2032  033D  1D03               	skipz
  2033  033E  2B41               	goto	u765
  2034  033F  0870               	movf	___awmod@divisor,w
  2035  0340  0272               	subwf	___awmod@dividend,w
  2036  0341                     u765:	
  2037  0341  1C03               	skipc
  2038  0342  2B44               	goto	u761
  2039  0343  2B45               	goto	u760
  2040  0344                     u761:	
  2041  0344  2B4B               	goto	l1168
  2042  0345                     u760:	
  2043  0345                     l1166:	
  2044  0345  0870               	movf	___awmod@divisor,w
  2045  0346  02F2               	subwf	___awmod@dividend,f
  2046  0347  0871               	movf	___awmod@divisor+1,w
  2047  0348  1C03               	skipc
  2048  0349  03F3               	decf	___awmod@dividend+1,f
  2049  034A  02F3               	subwf	___awmod@dividend+1,f
  2050  034B                     l1168:	
  2051  034B  3001               	movlw	1
  2052  034C                     u775:	
  2053  034C  1003               	clrc
  2054  034D  0CF1               	rrf	___awmod@divisor+1,f
  2055  034E  0CF0               	rrf	___awmod@divisor,f
  2056  034F  3EFF               	addlw	-1
  2057  0350  1D03               	skipz
  2058  0351  2B4C               	goto	u775
  2059  0352                     l1170:	
  2060  0352  3001               	movlw	1
  2061  0353  02F5               	subwf	___awmod@counter,f
  2062  0354  1D03               	btfss	3,2
  2063  0355  2B57               	goto	u781
  2064  0356  2B58               	goto	u780
  2065  0357                     u781:	
  2066  0357  2B3B               	goto	l1164
  2067  0358                     u780:	
  2068  0358                     l1172:	
  2069  0358  0876               	movf	___awmod@sign,w
  2070  0359  1903               	btfsc	3,2
  2071  035A  2B5C               	goto	u791
  2072  035B  2B5D               	goto	u790
  2073  035C                     u791:	
  2074  035C  2B62               	goto	l1176
  2075  035D                     u790:	
  2076  035D                     l1174:	
  2077  035D  09F2               	comf	___awmod@dividend,f
  2078  035E  09F3               	comf	___awmod@dividend+1,f
  2079  035F  0AF2               	incf	___awmod@dividend,f
  2080  0360  1903               	skipnz
  2081  0361  0AF3               	incf	___awmod@dividend+1,f
  2082  0362                     l1176:	
  2083  0362  0873               	movf	___awmod@dividend+1,w
  2084  0363  00F1               	movwf	?___awmod+1
  2085  0364  0872               	movf	___awmod@dividend,w
  2086  0365  00F0               	movwf	?___awmod
  2087  0366                     l380:	
  2088  0366  0008               	return
  2089  0367                     __end_of___awmod:	
  2090                           
  2091                           	psect	text8
  2092  03C4                     __ptext8:	
  2093 ;; *************** function ___awdiv *****************
  2094 ;; Defined at:
  2095 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  divisor         2    0[COMMON] int 
  2098 ;;  dividend        2    2[COMMON] int 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  quotient        2    7[COMMON] int 
  2101 ;;  sign            1    6[COMMON] unsigned char 
  2102 ;;  counter         1    5[COMMON] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    0[COMMON] int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         4       0       0       0       0
  2113 ;;      Locals:         4       0       0       0       0
  2114 ;;      Temps:          1       0       0       0       0
  2115 ;;      Totals:         9       0       0       0       0
  2116 ;;Total ram usage:        9 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_d2b
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function ___awdiv
  2128  03C4                     ___awdiv:	
  2129  03C4                     l1098:	
  2130                           ;incstack = 0
  2131                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2132                           
  2133  03C4  01F6               	clrf	___awdiv@sign
  2134  03C5                     l1100:	
  2135  03C5  1FF1               	btfss	___awdiv@divisor+1,7
  2136  03C6  2BC8               	goto	u611
  2137  03C7  2BC9               	goto	u610
  2138  03C8                     u611:	
  2139  03C8  2BD0               	goto	l1106
  2140  03C9                     u610:	
  2141  03C9                     l1102:	
  2142  03C9  09F0               	comf	___awdiv@divisor,f
  2143  03CA  09F1               	comf	___awdiv@divisor+1,f
  2144  03CB  0AF0               	incf	___awdiv@divisor,f
  2145  03CC  1903               	skipnz
  2146  03CD  0AF1               	incf	___awdiv@divisor+1,f
  2147  03CE                     l1104:	
  2148  03CE  01F6               	clrf	___awdiv@sign
  2149  03CF  0AF6               	incf	___awdiv@sign,f
  2150  03D0                     l1106:	
  2151  03D0  1FF3               	btfss	___awdiv@dividend+1,7
  2152  03D1  2BD3               	goto	u621
  2153  03D2  2BD4               	goto	u620
  2154  03D3                     u621:	
  2155  03D3  2BDD               	goto	l1112
  2156  03D4                     u620:	
  2157  03D4                     l1108:	
  2158  03D4  09F2               	comf	___awdiv@dividend,f
  2159  03D5  09F3               	comf	___awdiv@dividend+1,f
  2160  03D6  0AF2               	incf	___awdiv@dividend,f
  2161  03D7  1903               	skipnz
  2162  03D8  0AF3               	incf	___awdiv@dividend+1,f
  2163  03D9                     l1110:	
  2164  03D9  3001               	movlw	1
  2165  03DA  00F4               	movwf	??___awdiv
  2166  03DB  0874               	movf	??___awdiv,w
  2167  03DC  06F6               	xorwf	___awdiv@sign,f
  2168  03DD                     l1112:	
  2169  03DD  01F7               	clrf	___awdiv@quotient
  2170  03DE  01F8               	clrf	___awdiv@quotient+1
  2171  03DF                     l1114:	
  2172  03DF  0870               	movf	___awdiv@divisor,w
  2173  03E0  0471               	iorwf	___awdiv@divisor+1,w
  2174  03E1  1903               	btfsc	3,2
  2175  03E2  2BE4               	goto	u631
  2176  03E3  2BE5               	goto	u630
  2177  03E4                     u631:	
  2178  03E4  2C1C               	goto	l1134
  2179  03E5                     u630:	
  2180  03E5                     l1116:	
  2181  03E5  01F5               	clrf	___awdiv@counter
  2182  03E6  0AF5               	incf	___awdiv@counter,f
  2183  03E7  2BF3               	goto	l1122
  2184  03E8                     l1118:	
  2185  03E8  3001               	movlw	1
  2186  03E9                     u645:	
  2187  03E9  1003               	clrc
  2188  03EA  0DF0               	rlf	___awdiv@divisor,f
  2189  03EB  0DF1               	rlf	___awdiv@divisor+1,f
  2190  03EC  3EFF               	addlw	-1
  2191  03ED  1D03               	skipz
  2192  03EE  2BE9               	goto	u645
  2193  03EF                     l1120:	
  2194  03EF  3001               	movlw	1
  2195  03F0  00F4               	movwf	??___awdiv
  2196  03F1  0874               	movf	??___awdiv,w
  2197  03F2  07F5               	addwf	___awdiv@counter,f
  2198  03F3                     l1122:	
  2199  03F3  1FF1               	btfss	___awdiv@divisor+1,7
  2200  03F4  2BF6               	goto	u651
  2201  03F5  2BF7               	goto	u650
  2202  03F6                     u651:	
  2203  03F6  2BE8               	goto	l1118
  2204  03F7                     u650:	
  2205  03F7                     l1124:	
  2206  03F7  3001               	movlw	1
  2207  03F8                     u665:	
  2208  03F8  1003               	clrc
  2209  03F9  0DF7               	rlf	___awdiv@quotient,f
  2210  03FA  0DF8               	rlf	___awdiv@quotient+1,f
  2211  03FB  3EFF               	addlw	-1
  2212  03FC  1D03               	skipz
  2213  03FD  2BF8               	goto	u665
  2214  03FE  0871               	movf	___awdiv@divisor+1,w
  2215  03FF  0273               	subwf	___awdiv@dividend+1,w
  2216  0400  1D03               	skipz
  2217  0401  2C04               	goto	u675
  2218  0402  0870               	movf	___awdiv@divisor,w
  2219  0403  0272               	subwf	___awdiv@dividend,w
  2220  0404                     u675:	
  2221  0404  1C03               	skipc
  2222  0405  2C07               	goto	u671
  2223  0406  2C08               	goto	u670
  2224  0407                     u671:	
  2225  0407  2C0F               	goto	l1130
  2226  0408                     u670:	
  2227  0408                     l1126:	
  2228  0408  0870               	movf	___awdiv@divisor,w
  2229  0409  02F2               	subwf	___awdiv@dividend,f
  2230  040A  0871               	movf	___awdiv@divisor+1,w
  2231  040B  1C03               	skipc
  2232  040C  03F3               	decf	___awdiv@dividend+1,f
  2233  040D  02F3               	subwf	___awdiv@dividend+1,f
  2234  040E                     l1128:	
  2235  040E  1477               	bsf	___awdiv@quotient,0
  2236  040F                     l1130:	
  2237  040F  3001               	movlw	1
  2238  0410                     u685:	
  2239  0410  1003               	clrc
  2240  0411  0CF1               	rrf	___awdiv@divisor+1,f
  2241  0412  0CF0               	rrf	___awdiv@divisor,f
  2242  0413  3EFF               	addlw	-1
  2243  0414  1D03               	skipz
  2244  0415  2C10               	goto	u685
  2245  0416                     l1132:	
  2246  0416  3001               	movlw	1
  2247  0417  02F5               	subwf	___awdiv@counter,f
  2248  0418  1D03               	btfss	3,2
  2249  0419  2C1B               	goto	u691
  2250  041A  2C1C               	goto	u690
  2251  041B                     u691:	
  2252  041B  2BF7               	goto	l1124
  2253  041C                     u690:	
  2254  041C                     l1134:	
  2255  041C  0876               	movf	___awdiv@sign,w
  2256  041D  1903               	btfsc	3,2
  2257  041E  2C20               	goto	u701
  2258  041F  2C21               	goto	u700
  2259  0420                     u701:	
  2260  0420  2C26               	goto	l1138
  2261  0421                     u700:	
  2262  0421                     l1136:	
  2263  0421  09F7               	comf	___awdiv@quotient,f
  2264  0422  09F8               	comf	___awdiv@quotient+1,f
  2265  0423  0AF7               	incf	___awdiv@quotient,f
  2266  0424  1903               	skipnz
  2267  0425  0AF8               	incf	___awdiv@quotient+1,f
  2268  0426                     l1138:	
  2269  0426  0878               	movf	___awdiv@quotient+1,w
  2270  0427  00F1               	movwf	?___awdiv+1
  2271  0428  0877               	movf	___awdiv@quotient,w
  2272  0429  00F0               	movwf	?___awdiv
  2273  042A                     l367:	
  2274  042A  0008               	return
  2275  042B                     __end_of___awdiv:	
  2276                           
  2277                           	psect	text9
  2278  00A1                     __ptext9:	
  2279 ;; *************** function _I2C_Write *****************
  2280 ;; Defined at:
  2281 ;;		line 67 in file "newmain.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  data            2    0[BANK0 ] unsigned int 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       2       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       2       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    1
  2302 ;; This function calls:
  2303 ;;		_I2C_Hold
  2304 ;; This function is called by:
  2305 ;;		_setTime
  2306 ;;		_updateTime
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _I2C_Write
  2312  00A1                     _I2C_Write:	
  2313  00A1                     l1188:	
  2314                           ;incstack = 0
  2315                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2316                           
  2317                           
  2318                           ;newmain.c: 68:   I2C_Hold();
  2319  00A1  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  2320  00A6                     l1190:	
  2321                           
  2322                           ;newmain.c: 69:   SSPBUF = data;
  2323  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  2324  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  2325  00A8  0820               	movf	I2C_Write@data,w
  2326  00A9  0093               	movwf	19	;volatile
  2327  00AA                     l70:	
  2328  00AA  0008               	return
  2329  00AB                     __end_of_I2C_Write:	
  2330                           
  2331                           	psect	text10
  2332  0098                     __ptext10:	
  2333 ;; *************** function _I2C_End *****************
  2334 ;; Defined at:
  2335 ;;		line 62 in file "newmain.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    1
  2356 ;; This function calls:
  2357 ;;		_I2C_Hold
  2358 ;; This function is called by:
  2359 ;;		_setTime
  2360 ;;		_updateTime
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _I2C_End
  2366  0098                     _I2C_End:	
  2367  0098                     l1184:	
  2368                           ;incstack = 0
  2369                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  2370                           
  2371                           
  2372                           ;newmain.c: 63:   I2C_Hold();
  2373  0098  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  2374  009D                     l1186:	
  2375                           
  2376                           ;newmain.c: 64:   PEN = 1;
  2377  009D  1683               	bsf	3,5	;RP0=1, select bank1
  2378  009E  1303               	bcf	3,6	;RP1=0, select bank1
  2379  009F  1511               	bsf	17,2	;volatile
  2380  00A0                     l67:	
  2381  00A0  0008               	return
  2382  00A1                     __end_of_I2C_End:	
  2383                           
  2384                           	psect	text11
  2385  008F                     __ptext11:	
  2386 ;; *************** function _I2C_Begin *****************
  2387 ;; Defined at:
  2388 ;;		line 56 in file "newmain.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0
  2405 ;;      Totals:         0       0       0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		_I2C_Hold
  2411 ;; This function is called by:
  2412 ;;		_setTime
  2413 ;;		_updateTime
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _I2C_Begin
  2419  008F                     _I2C_Begin:	
  2420  008F                     l1180:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;newmain.c: 57:   I2C_Hold();
  2426  008F  120A  118A  20C2  120A  118A  	fcall	_I2C_Hold
  2427  0094                     l1182:	
  2428                           
  2429                           ;newmain.c: 58:   SEN = 1;
  2430  0094  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0095  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0096  1411               	bsf	17,0	;volatile
  2433  0097                     l64:	
  2434  0097  0008               	return
  2435  0098                     __end_of_I2C_Begin:	
  2436                           
  2437                           	psect	text12
  2438  00C2                     __ptext12:	
  2439 ;; *************** function _I2C_Hold *****************
  2440 ;; Defined at:
  2441 ;;		line 52 in file "newmain.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_I2C_Begin
  2465 ;;		_I2C_End
  2466 ;;		_I2C_Write
  2467 ;;		_I2C_Read
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _I2C_Hold
  2473  00C2                     _I2C_Hold:	
  2474  00C2                     l1068:	
  2475                           ;incstack = 0
  2476                           ; Regs used in _I2C_Hold: [wreg+status,2]
  2477                           
  2478  00C2                     l1070:	
  2479                           ;newmain.c: 53:     while ((SSPCON2 & 0b00011111)||(SSPSTAT & 0b00000100)) ;
  2480                           
  2481  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  2482  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  2483  00C4  0811               	movf	17,w	;volatile
  2484  00C5  391F               	andlw	31
  2485  00C6  1D03               	btfss	3,2
  2486  00C7  28C9               	goto	u511
  2487  00C8  28CA               	goto	u510
  2488  00C9                     u511:	
  2489  00C9  28C2               	goto	l1070
  2490  00CA                     u510:	
  2491  00CA                     l1072:	
  2492  00CA  1914               	btfsc	20,2	;volatile
  2493  00CB  28CD               	goto	u521
  2494  00CC  28CE               	goto	u520
  2495  00CD                     u521:	
  2496  00CD  28C2               	goto	l1070
  2497  00CE                     u520:	
  2498  00CE                     l61:	
  2499  00CE  0008               	return
  2500  00CF                     __end_of_I2C_Hold:	
  2501                           
  2502                           	psect	text13
  2503  011E                     __ptext13:	
  2504 ;; *************** function _Lcd_Write_String *****************
  2505 ;; Defined at:
  2506 ;;		line 172 in file "newmain.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  a               1    wreg     PTR unsigned char 
  2509 ;;		 -> STR_2(7), STR_1(7), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  a               1    7[COMMON] PTR unsigned char 
  2512 ;;		 -> STR_2(7), STR_1(7), 
  2513 ;;  i               2    5[COMMON] int 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         3       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         3       0       0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		_Lcd_Write_Char
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _Lcd_Write_String
  2539  011E                     _Lcd_Write_String:	
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2543                           ;Lcd_Write_String@a stored from wreg
  2544  011E  00F7               	movwf	Lcd_Write_String@a
  2545  011F                     l1326:	
  2546                           
  2547                           ;newmain.c: 173:  int i;;newmain.c: 174:  for(i=0;a[i]!='\0';i++)
  2548  011F  01F5               	clrf	Lcd_Write_String@i
  2549  0120  01F6               	clrf	Lcd_Write_String@i+1
  2550  0121  2935               	goto	l1332
  2551  0122                     l1328:	
  2552                           
  2553                           ;newmain.c: 175:     Lcd_Write_Char(a[i]);
  2554  0122  0875               	movf	Lcd_Write_String@i,w
  2555  0123  0777               	addwf	Lcd_Write_String@a,w
  2556  0124  0084               	movwf	4
  2557  0125  120A  118A  2003  120A  118A  	fcall	stringdir
  2558  012A  120A  118A  21EA  120A  118A  	fcall	_Lcd_Write_Char
  2559  012F                     l1330:	
  2560  012F  3001               	movlw	1
  2561  0130  07F5               	addwf	Lcd_Write_String@i,f
  2562  0131  1803               	skipnc
  2563  0132  0AF6               	incf	Lcd_Write_String@i+1,f
  2564  0133  3000               	movlw	0
  2565  0134  07F6               	addwf	Lcd_Write_String@i+1,f
  2566  0135                     l1332:	
  2567  0135  0875               	movf	Lcd_Write_String@i,w
  2568  0136  0777               	addwf	Lcd_Write_String@a,w
  2569  0137  0084               	movwf	4
  2570  0138  120A  118A  2003  120A  118A  	fcall	stringdir
  2571  013D  3A00               	xorlw	0
  2572  013E  1D03               	skipz
  2573  013F  2941               	goto	u1001
  2574  0140  2942               	goto	u1000
  2575  0141                     u1001:	
  2576  0141  2922               	goto	l1328
  2577  0142                     u1000:	
  2578  0142                     l108:	
  2579  0142  0008               	return
  2580  0143                     __end_of_Lcd_Write_String:	
  2581                           
  2582                           	psect	text14
  2583  01EA                     __ptext14:	
  2584 ;; *************** function _Lcd_Write_Char *****************
  2585 ;; Defined at:
  2586 ;;		line 157 in file "newmain.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  a               1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  a               1    4[COMMON] unsigned char 
  2591 ;;  y               1    3[COMMON] unsigned char 
  2592 ;;  temp            1    2[COMMON] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         3       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0
  2605 ;;      Totals:         4       0       0       0       0
  2606 ;;Total ram usage:        4 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		_Lcd_Port
  2611 ;; This function is called by:
  2612 ;;		_Lcd_Write_String
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _Lcd_Write_Char
  2619  01EA                     _Lcd_Write_Char:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2623                           ;Lcd_Write_Char@a stored from wreg
  2624  01EA  00F4               	movwf	Lcd_Write_Char@a
  2625  01EB                     l1218:	
  2626                           
  2627                           ;newmain.c: 158:    char temp,y;;newmain.c: 159:    temp = a&0x0F;
  2628  01EB  0874               	movf	Lcd_Write_Char@a,w
  2629  01EC  390F               	andlw	15
  2630  01ED  00F1               	movwf	??_Lcd_Write_Char
  2631  01EE  0871               	movf	??_Lcd_Write_Char,w
  2632  01EF  00F2               	movwf	Lcd_Write_Char@temp
  2633                           
  2634                           ;newmain.c: 160:    y = a&0xF0;
  2635  01F0  0874               	movf	Lcd_Write_Char@a,w
  2636  01F1  39F0               	andlw	240
  2637  01F2  00F1               	movwf	??_Lcd_Write_Char
  2638  01F3  0871               	movf	??_Lcd_Write_Char,w
  2639  01F4  00F3               	movwf	Lcd_Write_Char@y
  2640  01F5                     l1220:	
  2641                           
  2642                           ;newmain.c: 161:    RD2 = 1;
  2643  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2644  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2645  01F7  1508               	bsf	8,2	;volatile
  2646  01F8                     l1222:	
  2647                           
  2648                           ;newmain.c: 162:    Lcd_Port(y>>4);
  2649  01F8  0873               	movf	Lcd_Write_Char@y,w
  2650  01F9  00F1               	movwf	??_Lcd_Write_Char
  2651  01FA  3004               	movlw	4
  2652  01FB                     u825:	
  2653  01FB  1003               	clrc
  2654  01FC  0CF1               	rrf	??_Lcd_Write_Char,f
  2655  01FD  3EFF               	addlw	-1
  2656  01FE  1D03               	skipz
  2657  01FF  29FB               	goto	u825
  2658  0200  0871               	movf	??_Lcd_Write_Char,w
  2659  0201  120A  118A  20FC  120A  118A  	fcall	_Lcd_Port
  2660  0206                     l1224:	
  2661                           
  2662                           ;newmain.c: 163:    RD3 = 1;
  2663  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0208  1588               	bsf	8,3	;volatile
  2666  0209                     l1226:	
  2667                           
  2668                           ;newmain.c: 164:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2669  0209  301A               	movlw	26
  2670  020A  00F1               	movwf	??_Lcd_Write_Char
  2671  020B                     u1027:	
  2672  020B  0BF1               	decfsz	??_Lcd_Write_Char,f
  2673  020C  2A0B               	goto	u1027
  2674  020D  0000               	nop
  2675  020E                     l1228:	
  2676                           
  2677                           ;newmain.c: 165:    RD3 = 0;
  2678  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2679  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0210  1188               	bcf	8,3	;volatile
  2681  0211                     l1230:	
  2682                           
  2683                           ;newmain.c: 166:    Lcd_Port(temp);
  2684  0211  0872               	movf	Lcd_Write_Char@temp,w
  2685  0212  120A  118A  20FC  120A  118A  	fcall	_Lcd_Port
  2686  0217                     l1232:	
  2687                           
  2688                           ;newmain.c: 167:    RD3 = 1;
  2689  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0219  1588               	bsf	8,3	;volatile
  2692  021A                     l1234:	
  2693                           
  2694                           ;newmain.c: 168:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2695  021A  301A               	movlw	26
  2696  021B  00F1               	movwf	??_Lcd_Write_Char
  2697  021C                     u1037:	
  2698  021C  0BF1               	decfsz	??_Lcd_Write_Char,f
  2699  021D  2A1C               	goto	u1037
  2700  021E  0000               	nop
  2701  021F                     l1236:	
  2702                           
  2703                           ;newmain.c: 169:    RD3 = 0;
  2704  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0221  1188               	bcf	8,3	;volatile
  2707  0222                     l102:	
  2708  0222  0008               	return
  2709  0223                     __end_of_Lcd_Write_Char:	
  2710                           
  2711                           	psect	text15
  2712  0269                     __ptext15:	
  2713 ;; *************** function _Lcd_Set_Cursor *****************
  2714 ;; Defined at:
  2715 ;;		line 121 in file "newmain.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  a               1    wreg     unsigned char 
  2718 ;;  b               1    4[COMMON] unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  a               1    7[COMMON] unsigned char 
  2721 ;;  temp            1   10[COMMON] unsigned char 
  2722 ;;  y               1    9[COMMON] unsigned char 
  2723 ;;  z               1    8[COMMON] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         1       0       0       0       0
  2734 ;;      Locals:         4       0       0       0       0
  2735 ;;      Temps:          2       0       0       0       0
  2736 ;;      Totals:         7       0       0       0       0
  2737 ;;Total ram usage:        7 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    2
  2740 ;; This function calls:
  2741 ;;		_Lcd_Cmd
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _Lcd_Set_Cursor
  2749  0269                     _Lcd_Set_Cursor:	
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2753                           ;Lcd_Set_Cursor@a stored from wreg
  2754  0269  00F7               	movwf	Lcd_Set_Cursor@a
  2755  026A                     l1296:	
  2756                           
  2757                           ;newmain.c: 122:  char temp,z,y;;newmain.c: 123:  if(a == 1){
  2758  026A  0377               	decf	Lcd_Set_Cursor@a,w
  2759  026B  1D03               	btfss	3,2
  2760  026C  2A6E               	goto	u961
  2761  026D  2A6F               	goto	u960
  2762  026E                     u961:	
  2763  026E  2A92               	goto	l1306
  2764  026F                     u960:	
  2765  026F                     l1298:	
  2766                           
  2767                           ;newmain.c: 124:    temp = 0x80 + b - 1;
  2768  026F  0874               	movf	Lcd_Set_Cursor@b,w
  2769  0270  3E7F               	addlw	127
  2770  0271  00F5               	movwf	??_Lcd_Set_Cursor
  2771  0272  0875               	movf	??_Lcd_Set_Cursor,w
  2772  0273  00FA               	movwf	Lcd_Set_Cursor@temp
  2773                           
  2774                           ;newmain.c: 125:   z = temp>>4;
  2775  0274  087A               	movf	Lcd_Set_Cursor@temp,w
  2776  0275  00F5               	movwf	??_Lcd_Set_Cursor
  2777  0276  3004               	movlw	4
  2778  0277                     u975:	
  2779  0277  1003               	clrc
  2780  0278  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2781  0279  3EFF               	addlw	-1
  2782  027A  1D03               	skipz
  2783  027B  2A77               	goto	u975
  2784  027C  0875               	movf	??_Lcd_Set_Cursor,w
  2785  027D  00F6               	movwf	??_Lcd_Set_Cursor+1
  2786  027E  0876               	movf	??_Lcd_Set_Cursor+1,w
  2787  027F  00F8               	movwf	Lcd_Set_Cursor@z
  2788  0280                     l1300:	
  2789                           
  2790                           ;newmain.c: 126:   y = temp & 0x0F;
  2791  0280  087A               	movf	Lcd_Set_Cursor@temp,w
  2792  0281  390F               	andlw	15
  2793  0282  00F5               	movwf	??_Lcd_Set_Cursor
  2794  0283  0875               	movf	??_Lcd_Set_Cursor,w
  2795  0284  00F9               	movwf	Lcd_Set_Cursor@y
  2796  0285                     l1302:	
  2797                           
  2798                           ;newmain.c: 127:   Lcd_Cmd(z);
  2799  0285  0878               	movf	Lcd_Set_Cursor@z,w
  2800  0286  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2801  028B                     l1304:	
  2802                           
  2803                           ;newmain.c: 128:   Lcd_Cmd(y);
  2804  028B  0879               	movf	Lcd_Set_Cursor@y,w
  2805  028C  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2806                           
  2807                           ;newmain.c: 129:  }
  2808  0291  2ABA               	goto	l96
  2809  0292                     l1306:	
  2810  0292  3002               	movlw	2
  2811  0293  0677               	xorwf	Lcd_Set_Cursor@a,w
  2812  0294  1D03               	btfss	3,2
  2813  0295  2A97               	goto	u981
  2814  0296  2A98               	goto	u980
  2815  0297                     u981:	
  2816  0297  2ABA               	goto	l96
  2817  0298                     u980:	
  2818  0298                     l1308:	
  2819                           
  2820                           ;newmain.c: 131:   temp = 0xC0 + b - 1;
  2821  0298  0874               	movf	Lcd_Set_Cursor@b,w
  2822  0299  3EBF               	addlw	191
  2823  029A  00F5               	movwf	??_Lcd_Set_Cursor
  2824  029B  0875               	movf	??_Lcd_Set_Cursor,w
  2825  029C  00FA               	movwf	Lcd_Set_Cursor@temp
  2826                           
  2827                           ;newmain.c: 132:   z = temp>>4;
  2828  029D  087A               	movf	Lcd_Set_Cursor@temp,w
  2829  029E  00F5               	movwf	??_Lcd_Set_Cursor
  2830  029F  3004               	movlw	4
  2831  02A0                     u995:	
  2832  02A0  1003               	clrc
  2833  02A1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2834  02A2  3EFF               	addlw	-1
  2835  02A3  1D03               	skipz
  2836  02A4  2AA0               	goto	u995
  2837  02A5  0875               	movf	??_Lcd_Set_Cursor,w
  2838  02A6  00F6               	movwf	??_Lcd_Set_Cursor+1
  2839  02A7  0876               	movf	??_Lcd_Set_Cursor+1,w
  2840  02A8  00F8               	movwf	Lcd_Set_Cursor@z
  2841  02A9                     l1310:	
  2842                           
  2843                           ;newmain.c: 133:   y = temp & 0x0F;
  2844  02A9  087A               	movf	Lcd_Set_Cursor@temp,w
  2845  02AA  390F               	andlw	15
  2846  02AB  00F5               	movwf	??_Lcd_Set_Cursor
  2847  02AC  0875               	movf	??_Lcd_Set_Cursor,w
  2848  02AD  00F9               	movwf	Lcd_Set_Cursor@y
  2849  02AE                     l1312:	
  2850                           
  2851                           ;newmain.c: 134:   Lcd_Cmd(z);
  2852  02AE  0878               	movf	Lcd_Set_Cursor@z,w
  2853  02AF  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2854  02B4                     l1314:	
  2855                           
  2856                           ;newmain.c: 135:   Lcd_Cmd(y);
  2857  02B4  0879               	movf	Lcd_Set_Cursor@y,w
  2858  02B5  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2859  02BA                     l96:	
  2860  02BA  0008               	return
  2861  02BB                     __end_of_Lcd_Set_Cursor:	
  2862                           
  2863                           	psect	text16
  2864  0367                     __ptext16:	
  2865 ;; *************** function _Lcd_Init *****************
  2866 ;; Defined at:
  2867 ;;		line 139 in file "newmain.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          2       0       0       0       0
  2884 ;;      Totals:         2       0       0       0       0
  2885 ;;Total ram usage:        2 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_Lcd_Cmd
  2890 ;;		_Lcd_Port
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _Lcd_Init
  2898  0367                     _Lcd_Init:	
  2899  0367                     l1316:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2902                           
  2903                           
  2904                           ;newmain.c: 140:   Lcd_Port(0x00);
  2905  0367  3000               	movlw	0
  2906  0368  120A  118A  20FC  120A  118A  	fcall	_Lcd_Port
  2907  036D                     l1318:	
  2908                           
  2909                           ;newmain.c: 141:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2910  036D  3034               	movlw	52
  2911  036E  00F5               	movwf	??_Lcd_Init+1
  2912  036F  30F1               	movlw	241
  2913  0370  00F4               	movwf	??_Lcd_Init
  2914  0371                     u1047:	
  2915  0371  0BF4               	decfsz	??_Lcd_Init,f
  2916  0372  2B71               	goto	u1047
  2917  0373  0BF5               	decfsz	??_Lcd_Init+1,f
  2918  0374  2B71               	goto	u1047
  2919  0375  2B76               	nop2
  2920  0376                     l1320:	
  2921                           
  2922                           ;newmain.c: 142:   Lcd_Cmd(0x03);
  2923  0376  3003               	movlw	3
  2924  0377  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2925                           
  2926                           ;newmain.c: 143:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2927  037C  300D               	movlw	13
  2928  037D  00F5               	movwf	??_Lcd_Init+1
  2929  037E  30FB               	movlw	251
  2930  037F  00F4               	movwf	??_Lcd_Init
  2931  0380                     u1057:	
  2932  0380  0BF4               	decfsz	??_Lcd_Init,f
  2933  0381  2B80               	goto	u1057
  2934  0382  0BF5               	decfsz	??_Lcd_Init+1,f
  2935  0383  2B80               	goto	u1057
  2936  0384  2B85               	nop2
  2937  0385                     l1322:	
  2938                           
  2939                           ;newmain.c: 144:   Lcd_Cmd(0x03);
  2940  0385  3003               	movlw	3
  2941  0386  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2942  038B                     l1324:	
  2943                           
  2944                           ;newmain.c: 145:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2945  038B  301D               	movlw	29
  2946  038C  00F5               	movwf	??_Lcd_Init+1
  2947  038D  3091               	movlw	145
  2948  038E  00F4               	movwf	??_Lcd_Init
  2949  038F                     u1067:	
  2950  038F  0BF4               	decfsz	??_Lcd_Init,f
  2951  0390  2B8F               	goto	u1067
  2952  0391  0BF5               	decfsz	??_Lcd_Init+1,f
  2953  0392  2B8F               	goto	u1067
  2954                           
  2955                           ;newmain.c: 146:   Lcd_Cmd(0x03);
  2956  0393  3003               	movlw	3
  2957  0394  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2958                           
  2959                           ;newmain.c: 148:   Lcd_Cmd(0x02);
  2960  0399  3002               	movlw	2
  2961  039A  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2962                           
  2963                           ;newmain.c: 149:   Lcd_Cmd(0x02);
  2964  039F  3002               	movlw	2
  2965  03A0  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2966                           
  2967                           ;newmain.c: 150:   Lcd_Cmd(0x08);
  2968  03A5  3008               	movlw	8
  2969  03A6  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2970                           
  2971                           ;newmain.c: 151:   Lcd_Cmd(0x00);
  2972  03AB  3000               	movlw	0
  2973  03AC  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2974                           
  2975                           ;newmain.c: 152:   Lcd_Cmd(0x0C);
  2976  03B1  300C               	movlw	12
  2977  03B2  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2978                           
  2979                           ;newmain.c: 153:   Lcd_Cmd(0x00);
  2980  03B7  3000               	movlw	0
  2981  03B8  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2982                           
  2983                           ;newmain.c: 154:   Lcd_Cmd(0x06);
  2984  03BD  3006               	movlw	6
  2985  03BE  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  2986  03C3                     l99:	
  2987  03C3  0008               	return
  2988  03C4                     __end_of_Lcd_Init:	
  2989                           
  2990                           	psect	text17
  2991  00B5                     __ptext17:	
  2992 ;; *************** function _Lcd_Clear *****************
  2993 ;; Defined at:
  2994 ;;		line 116 in file "newmain.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2   89[None  ] int 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, pclath, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    2
  3015 ;; This function calls:
  3016 ;;		_Lcd_Cmd
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _Lcd_Clear
  3024  00B5                     _Lcd_Clear:	
  3025  00B5                     l1294:	
  3026                           ;incstack = 0
  3027                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3028                           
  3029                           
  3030                           ;newmain.c: 117:  Lcd_Cmd(0);
  3031  00B5  3000               	movlw	0
  3032  00B6  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  3033                           
  3034                           ;newmain.c: 118:  Lcd_Cmd(1);
  3035  00BB  3001               	movlw	1
  3036  00BC  120A  118A  20E2  120A  118A  	fcall	_Lcd_Cmd
  3037  00C1                     l90:	
  3038  00C1  0008               	return
  3039  00C2                     __end_of_Lcd_Clear:	
  3040                           
  3041                           	psect	text18
  3042  00E2                     __ptext18:	
  3043 ;; *************** function _Lcd_Cmd *****************
  3044 ;; Defined at:
  3045 ;;		line 108 in file "newmain.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  a               1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  a               1    3[COMMON] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       0       0       0       0
  3060 ;;      Locals:         1       0       0       0       0
  3061 ;;      Temps:          2       0       0       0       0
  3062 ;;      Totals:         3       0       0       0       0
  3063 ;;Total ram usage:        3 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    1
  3066 ;; This function calls:
  3067 ;;		_Lcd_Port
  3068 ;; This function is called by:
  3069 ;;		_Lcd_Clear
  3070 ;;		_Lcd_Set_Cursor
  3071 ;;		_Lcd_Init
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _Lcd_Cmd
  3077  00E2                     _Lcd_Cmd:	
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3081                           ;Lcd_Cmd@a stored from wreg
  3082  00E2  00F3               	movwf	Lcd_Cmd@a
  3083  00E3                     l1208:	
  3084                           
  3085                           ;newmain.c: 109:  RD2 = 0;
  3086  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3087  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  3088  00E5  1108               	bcf	8,2	;volatile
  3089  00E6                     l1210:	
  3090                           
  3091                           ;newmain.c: 110:  Lcd_Port(a);
  3092  00E6  0873               	movf	Lcd_Cmd@a,w
  3093  00E7  120A  118A  20FC  120A  118A  	fcall	_Lcd_Port
  3094  00EC                     l1212:	
  3095                           
  3096                           ;newmain.c: 111:  RD3 = 1;
  3097  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  3098  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  3099  00EE  1588               	bsf	8,3	;volatile
  3100  00EF                     l1214:	
  3101                           
  3102                           ;newmain.c: 112:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3103  00EF  300B               	movlw	11
  3104  00F0  00F2               	movwf	??_Lcd_Cmd+1
  3105  00F1  3062               	movlw	98
  3106  00F2  00F1               	movwf	??_Lcd_Cmd
  3107  00F3                     u1077:	
  3108  00F3  0BF1               	decfsz	??_Lcd_Cmd,f
  3109  00F4  28F3               	goto	u1077
  3110  00F5  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3111  00F6  28F3               	goto	u1077
  3112  00F7  0000               	nop
  3113  00F8                     l1216:	
  3114                           
  3115                           ;newmain.c: 113:         RD3 = 0;
  3116  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3117  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3118  00FA  1188               	bcf	8,3	;volatile
  3119  00FB                     l87:	
  3120  00FB  0008               	return
  3121  00FC                     __end_of_Lcd_Cmd:	
  3122                           
  3123                           	psect	text19
  3124  00FC                     __ptext19:	
  3125 ;; *************** function _Lcd_Port *****************
  3126 ;; Defined at:
  3127 ;;		line 87 in file "newmain.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  a               1    wreg     unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  a               1    0[COMMON] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         1       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         1       0       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_Lcd_Cmd
  3151 ;;		_Lcd_Init
  3152 ;;		_Lcd_Write_Char
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _Lcd_Port
  3158  00FC                     _Lcd_Port:	
  3159                           
  3160                           ;incstack = 0
  3161                           ; Regs used in _Lcd_Port: [wreg]
  3162                           ;Lcd_Port@a stored from wreg
  3163  00FC  00F0               	movwf	Lcd_Port@a
  3164  00FD                     l1074:	
  3165                           
  3166                           ;newmain.c: 88:  if(a & 1)
  3167  00FD  1C70               	btfss	Lcd_Port@a,0
  3168  00FE  2900               	goto	u531
  3169  00FF  2901               	goto	u530
  3170  0100                     u531:	
  3171  0100  2905               	goto	l76
  3172  0101                     u530:	
  3173  0101                     l1076:	
  3174                           
  3175                           ;newmain.c: 89:   RD4 = 1;
  3176  0101  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0102  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0103  1608               	bsf	8,4	;volatile
  3179  0104  2908               	goto	l77
  3180  0105                     l76:	
  3181                           ;newmain.c: 90:  else
  3182                           
  3183                           
  3184                           ;newmain.c: 91:   RD4 = 0;
  3185  0105  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0106  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0107  1208               	bcf	8,4	;volatile
  3188  0108                     l77:	
  3189                           
  3190                           ;newmain.c: 93:  if(a & 2)
  3191  0108  1CF0               	btfss	Lcd_Port@a,1
  3192  0109  290B               	goto	u541
  3193  010A  290C               	goto	u540
  3194  010B                     u541:	
  3195  010B  290E               	goto	l78
  3196  010C                     u540:	
  3197  010C                     l1078:	
  3198                           
  3199                           ;newmain.c: 94:   RD5 = 1;
  3200  010C  1688               	bsf	8,5	;volatile
  3201  010D  290F               	goto	l79
  3202  010E                     l78:	
  3203                           ;newmain.c: 95:  else
  3204                           
  3205                           
  3206                           ;newmain.c: 96:   RD5 = 0;
  3207  010E  1288               	bcf	8,5	;volatile
  3208  010F                     l79:	
  3209                           
  3210                           ;newmain.c: 98:  if(a & 4)
  3211  010F  1D70               	btfss	Lcd_Port@a,2
  3212  0110  2912               	goto	u551
  3213  0111  2913               	goto	u550
  3214  0112                     u551:	
  3215  0112  2915               	goto	l80
  3216  0113                     u550:	
  3217  0113                     l1080:	
  3218                           
  3219                           ;newmain.c: 99:   RD6 = 1;
  3220  0113  1708               	bsf	8,6	;volatile
  3221  0114  2916               	goto	l81
  3222  0115                     l80:	
  3223                           ;newmain.c: 100:  else
  3224                           
  3225                           
  3226                           ;newmain.c: 101:   RD6 = 0;
  3227  0115  1308               	bcf	8,6	;volatile
  3228  0116                     l81:	
  3229                           
  3230                           ;newmain.c: 103:  if(a & 8)
  3231  0116  1DF0               	btfss	Lcd_Port@a,3
  3232  0117  2919               	goto	u561
  3233  0118  291A               	goto	u560
  3234  0119                     u561:	
  3235  0119  291C               	goto	l82
  3236  011A                     u560:	
  3237  011A                     l1082:	
  3238                           
  3239                           ;newmain.c: 104:   RD7 = 1;
  3240  011A  1788               	bsf	8,7	;volatile
  3241  011B  291D               	goto	l84
  3242  011C                     l82:	
  3243                           ;newmain.c: 105:  else
  3244                           
  3245                           
  3246                           ;newmain.c: 106:   RD7 = 0;
  3247  011C  1388               	bcf	8,7	;volatile
  3248  011D                     l84:	
  3249  011D  0008               	return
  3250  011E                     __end_of_Lcd_Port:	
  3251                           
  3252                           	psect	text20
  3253  02BB                     __ptext20:	
  3254 ;; *************** function _I2C_Init *****************
  3255 ;; Defined at:
  3256 ;;		line 42 in file "newmain.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  freq            4   13[BANK0 ] const unsigned long 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       4       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       4       0       0       0
  3273 ;;      Totals:         0       8       0       0       0
  3274 ;;Total ram usage:        8 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    1
  3277 ;; This function calls:
  3278 ;;		___lldiv
  3279 ;;		___lmul
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _I2C_Init
  3287  02BB                     _I2C_Init:	
  3288  02BB                     l1284:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3291                           
  3292                           
  3293                           ;newmain.c: 43:   TRISC3 = 1; TRISC4 = 1;
  3294  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  3295  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  3296  02BD  1587               	bsf	7,3	;volatile
  3297  02BE  1607               	bsf	7,4	;volatile
  3298  02BF                     l1286:	
  3299                           
  3300                           ;newmain.c: 45:   SSPCON = 0b00101000;
  3301  02BF  3028               	movlw	40
  3302  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  3303  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  3304  02C2  0094               	movwf	20	;volatile
  3305  02C3                     l1288:	
  3306                           
  3307                           ;newmain.c: 46:   SSPCON2 = 0b00000000;
  3308  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  3309  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  3310  02C5  0191               	clrf	17	;volatile
  3311  02C6                     l1290:	
  3312                           
  3313                           ;newmain.c: 48:   SSPADD = (8000000/(4*freq*100))-1;
  3314  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3315  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3316  02C8  082D               	movf	I2C_Init@freq,w
  3317  02C9  00B1               	movwf	??_I2C_Init
  3318  02CA  082E               	movf	I2C_Init@freq+1,w
  3319  02CB  00B2               	movwf	??_I2C_Init+1
  3320  02CC  082F               	movf	I2C_Init@freq+2,w
  3321  02CD  00B3               	movwf	??_I2C_Init+2
  3322  02CE  0830               	movf	I2C_Init@freq+3,w
  3323  02CF  00B4               	movwf	??_I2C_Init+3
  3324  02D0  3002               	movlw	2
  3325  02D1                     u955:	
  3326  02D1  1003               	clrc
  3327  02D2  0DB1               	rlf	??_I2C_Init,f
  3328  02D3  0DB2               	rlf	??_I2C_Init+1,f
  3329  02D4  0DB3               	rlf	??_I2C_Init+2,f
  3330  02D5  0DB4               	rlf	??_I2C_Init+3,f
  3331  02D6                     u950:	
  3332  02D6  3EFF               	addlw	-1
  3333  02D7  1D03               	skipz
  3334  02D8  2AD1               	goto	u955
  3335  02D9  0834               	movf	??_I2C_Init+3,w
  3336  02DA  00F3               	movwf	___lmul@multiplier+3
  3337  02DB  0833               	movf	??_I2C_Init+2,w
  3338  02DC  00F2               	movwf	___lmul@multiplier+2
  3339  02DD  0832               	movf	??_I2C_Init+1,w
  3340  02DE  00F1               	movwf	___lmul@multiplier+1
  3341  02DF  0831               	movf	??_I2C_Init,w
  3342  02E0  00F0               	movwf	___lmul@multiplier
  3343  02E1  3000               	movlw	0
  3344  02E2  00F7               	movwf	___lmul@multiplicand+3
  3345  02E3  3000               	movlw	0
  3346  02E4  00F6               	movwf	___lmul@multiplicand+2
  3347  02E5  3000               	movlw	0
  3348  02E6  00F5               	movwf	___lmul@multiplicand+1
  3349  02E7  3064               	movlw	100
  3350  02E8  00F4               	movwf	___lmul@multiplicand
  3351  02E9  120A  118A  2223  120A  118A  	fcall	___lmul
  3352  02EE  0873               	movf	?___lmul+3,w
  3353  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3354  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3355  02F1  00A3               	movwf	___lldiv@divisor+3
  3356  02F2  0872               	movf	?___lmul+2,w
  3357  02F3  00A2               	movwf	___lldiv@divisor+2
  3358  02F4  0871               	movf	?___lmul+1,w
  3359  02F5  00A1               	movwf	___lldiv@divisor+1
  3360  02F6  0870               	movf	?___lmul,w
  3361  02F7  00A0               	movwf	___lldiv@divisor
  3362  02F8  3000               	movlw	0
  3363  02F9  00A7               	movwf	___lldiv@dividend+3
  3364  02FA  307A               	movlw	122
  3365  02FB  00A6               	movwf	___lldiv@dividend+2
  3366  02FC  3012               	movlw	18
  3367  02FD  00A5               	movwf	___lldiv@dividend+1
  3368  02FE  3000               	movlw	0
  3369  02FF  00A4               	movwf	___lldiv@dividend
  3370  0300  120A  118A  242B  120A  118A  	fcall	___lldiv
  3371  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0307  0820               	movf	?___lldiv,w
  3374  0308  3EFF               	addlw	255
  3375  0309  1683               	bsf	3,5	;RP0=1, select bank1
  3376  030A  1303               	bcf	3,6	;RP1=0, select bank1
  3377  030B  0093               	movwf	19	;volatile
  3378  030C                     l1292:	
  3379                           
  3380                           ;newmain.c: 49:   SSPSTAT = 0b00000000;
  3381  030C  0194               	clrf	20	;volatile
  3382  030D                     l55:	
  3383  030D  0008               	return
  3384  030E                     __end_of_I2C_Init:	
  3385                           
  3386                           	psect	text21
  3387  0223                     __ptext21:	
  3388 ;; *************** function ___lmul *****************
  3389 ;; Defined at:
  3390 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  multiplier      4    0[COMMON] unsigned long 
  3393 ;;  multiplicand    4    4[COMMON] unsigned long 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  product         4    9[COMMON] unsigned long 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  4    0[COMMON] unsigned long 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         8       0       0       0       0
  3406 ;;      Locals:         4       0       0       0       0
  3407 ;;      Temps:          1       0       0       0       0
  3408 ;;      Totals:        13       0       0       0       0
  3409 ;;Total ram usage:       13 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_I2C_Init
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function ___lmul
  3420  0223                     ___lmul:	
  3421  0223                     l1246:	
  3422                           ;incstack = 0
  3423                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3424                           
  3425  0223  3000               	movlw	0
  3426  0224  00FC               	movwf	___lmul@product+3
  3427  0225  3000               	movlw	0
  3428  0226  00FB               	movwf	___lmul@product+2
  3429  0227  3000               	movlw	0
  3430  0228  00FA               	movwf	___lmul@product+1
  3431  0229  3000               	movlw	0
  3432  022A  00F9               	movwf	___lmul@product
  3433  022B                     l1248:	
  3434  022B  1C70               	btfss	___lmul@multiplier,0
  3435  022C  2A2E               	goto	u831
  3436  022D  2A2F               	goto	u830
  3437  022E                     u831:	
  3438  022E  2A46               	goto	l1252
  3439  022F                     u830:	
  3440  022F                     l1250:	
  3441  022F  0874               	movf	___lmul@multiplicand,w
  3442  0230  07F9               	addwf	___lmul@product,f
  3443  0231  0875               	movf	___lmul@multiplicand+1,w
  3444  0232  1103               	clrz
  3445  0233  1803               	skipnc
  3446  0234  3E01               	addlw	1
  3447  0235  1903               	skipnz
  3448  0236  2A38               	goto	u841
  3449  0237  07FA               	addwf	___lmul@product+1,f
  3450  0238                     u841:	
  3451  0238  0876               	movf	___lmul@multiplicand+2,w
  3452  0239  1103               	clrz
  3453  023A  1803               	skipnc
  3454  023B  3E01               	addlw	1
  3455  023C  1903               	skipnz
  3456  023D  2A3F               	goto	u842
  3457  023E  07FB               	addwf	___lmul@product+2,f
  3458  023F                     u842:	
  3459  023F  0877               	movf	___lmul@multiplicand+3,w
  3460  0240  1103               	clrz
  3461  0241  1803               	skipnc
  3462  0242  3E01               	addlw	1
  3463  0243  1903               	skipnz
  3464  0244  2A46               	goto	u843
  3465  0245  07FC               	addwf	___lmul@product+3,f
  3466  0246                     u843:	
  3467  0246                     l1252:	
  3468  0246  3001               	movlw	1
  3469  0247  00F8               	movwf	??___lmul
  3470  0248                     u855:	
  3471  0248  1003               	clrc
  3472  0249  0DF4               	rlf	___lmul@multiplicand,f
  3473  024A  0DF5               	rlf	___lmul@multiplicand+1,f
  3474  024B  0DF6               	rlf	___lmul@multiplicand+2,f
  3475  024C  0DF7               	rlf	___lmul@multiplicand+3,f
  3476  024D  0BF8               	decfsz	??___lmul,f
  3477  024E  2A48               	goto	u855
  3478  024F                     l1254:	
  3479  024F  3001               	movlw	1
  3480  0250                     u865:	
  3481  0250  1003               	clrc
  3482  0251  0CF3               	rrf	___lmul@multiplier+3,f
  3483  0252  0CF2               	rrf	___lmul@multiplier+2,f
  3484  0253  0CF1               	rrf	___lmul@multiplier+1,f
  3485  0254  0CF0               	rrf	___lmul@multiplier,f
  3486  0255  3EFF               	addlw	-1
  3487  0256  1D03               	skipz
  3488  0257  2A50               	goto	u865
  3489  0258  0873               	movf	___lmul@multiplier+3,w
  3490  0259  0472               	iorwf	___lmul@multiplier+2,w
  3491  025A  0471               	iorwf	___lmul@multiplier+1,w
  3492  025B  0470               	iorwf	___lmul@multiplier,w
  3493  025C  1D03               	skipz
  3494  025D  2A5F               	goto	u871
  3495  025E  2A60               	goto	u870
  3496  025F                     u871:	
  3497  025F  2A2B               	goto	l1248
  3498  0260                     u870:	
  3499  0260                     l1256:	
  3500  0260  087C               	movf	___lmul@product+3,w
  3501  0261  00F3               	movwf	?___lmul+3
  3502  0262  087B               	movf	___lmul@product+2,w
  3503  0263  00F2               	movwf	?___lmul+2
  3504  0264  087A               	movf	___lmul@product+1,w
  3505  0265  00F1               	movwf	?___lmul+1
  3506  0266  0879               	movf	___lmul@product,w
  3507  0267  00F0               	movwf	?___lmul
  3508  0268                     l228:	
  3509  0268  0008               	return
  3510  0269                     __end_of___lmul:	
  3511                           
  3512                           	psect	text22
  3513  042B                     __ptext22:	
  3514 ;; *************** function ___lldiv *****************
  3515 ;; Defined at:
  3516 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  divisor         4    0[BANK0 ] unsigned long 
  3519 ;;  dividend        4    4[BANK0 ] unsigned long 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  quotient        4    8[BANK0 ] unsigned long 
  3522 ;;  counter         1   12[BANK0 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  4    0[BANK0 ] unsigned long 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       8       0       0       0
  3533 ;;      Locals:         0       5       0       0       0
  3534 ;;      Temps:          1       0       0       0       0
  3535 ;;      Totals:         1      13       0       0       0
  3536 ;;Total ram usage:       14 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_I2C_Init
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function ___lldiv
  3547  042B                     ___lldiv:	
  3548  042B                     l1260:	
  3549                           ;incstack = 0
  3550                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3551                           
  3552  042B  3000               	movlw	0
  3553  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3554  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3555  042E  00AB               	movwf	___lldiv@quotient+3
  3556  042F  3000               	movlw	0
  3557  0430  00AA               	movwf	___lldiv@quotient+2
  3558  0431  3000               	movlw	0
  3559  0432  00A9               	movwf	___lldiv@quotient+1
  3560  0433  3000               	movlw	0
  3561  0434  00A8               	movwf	___lldiv@quotient
  3562  0435  0823               	movf	___lldiv@divisor+3,w
  3563  0436  0422               	iorwf	___lldiv@divisor+2,w
  3564  0437  0421               	iorwf	___lldiv@divisor+1,w
  3565  0438  0420               	iorwf	___lldiv@divisor,w
  3566  0439  1903               	skipnz
  3567  043A  2C3C               	goto	u881
  3568  043B  2C3D               	goto	u880
  3569  043C                     u881:	
  3570  043C  2C8A               	goto	l1280
  3571  043D                     u880:	
  3572  043D                     l1262:	
  3573  043D  01AC               	clrf	___lldiv@counter
  3574  043E  0AAC               	incf	___lldiv@counter,f
  3575  043F  2C4D               	goto	l1266
  3576  0440                     l1264:	
  3577  0440  3001               	movlw	1
  3578  0441  00FD               	movwf	??___lldiv
  3579  0442                     u895:	
  3580  0442  1003               	clrc
  3581  0443  0DA0               	rlf	___lldiv@divisor,f
  3582  0444  0DA1               	rlf	___lldiv@divisor+1,f
  3583  0445  0DA2               	rlf	___lldiv@divisor+2,f
  3584  0446  0DA3               	rlf	___lldiv@divisor+3,f
  3585  0447  0BFD               	decfsz	??___lldiv,f
  3586  0448  2C42               	goto	u895
  3587  0449  3001               	movlw	1
  3588  044A  00FD               	movwf	??___lldiv
  3589  044B  087D               	movf	??___lldiv,w
  3590  044C  07AC               	addwf	___lldiv@counter,f
  3591  044D                     l1266:	
  3592  044D  1FA3               	btfss	___lldiv@divisor+3,7
  3593  044E  2C50               	goto	u901
  3594  044F  2C51               	goto	u900
  3595  0450                     u901:	
  3596  0450  2C40               	goto	l1264
  3597  0451                     u900:	
  3598  0451                     l1268:	
  3599  0451  3001               	movlw	1
  3600  0452  00FD               	movwf	??___lldiv
  3601  0453                     u915:	
  3602  0453  1003               	clrc
  3603  0454  0DA8               	rlf	___lldiv@quotient,f
  3604  0455  0DA9               	rlf	___lldiv@quotient+1,f
  3605  0456  0DAA               	rlf	___lldiv@quotient+2,f
  3606  0457  0DAB               	rlf	___lldiv@quotient+3,f
  3607  0458  0BFD               	decfsz	??___lldiv,f
  3608  0459  2C53               	goto	u915
  3609  045A                     l1270:	
  3610  045A  0823               	movf	___lldiv@divisor+3,w
  3611  045B  0227               	subwf	___lldiv@dividend+3,w
  3612  045C  1D03               	skipz
  3613  045D  2C68               	goto	u925
  3614  045E  0822               	movf	___lldiv@divisor+2,w
  3615  045F  0226               	subwf	___lldiv@dividend+2,w
  3616  0460  1D03               	skipz
  3617  0461  2C68               	goto	u925
  3618  0462  0821               	movf	___lldiv@divisor+1,w
  3619  0463  0225               	subwf	___lldiv@dividend+1,w
  3620  0464  1D03               	skipz
  3621  0465  2C68               	goto	u925
  3622  0466  0820               	movf	___lldiv@divisor,w
  3623  0467  0224               	subwf	___lldiv@dividend,w
  3624  0468                     u925:	
  3625  0468  1C03               	skipc
  3626  0469  2C6B               	goto	u921
  3627  046A  2C6C               	goto	u920
  3628  046B                     u921:	
  3629  046B  2C7B               	goto	l1276
  3630  046C                     u920:	
  3631  046C                     l1272:	
  3632  046C  0820               	movf	___lldiv@divisor,w
  3633  046D  02A4               	subwf	___lldiv@dividend,f
  3634  046E  0821               	movf	___lldiv@divisor+1,w
  3635  046F  1C03               	skipc
  3636  0470  0F21               	incfsz	___lldiv@divisor+1,w
  3637  0471  02A5               	subwf	___lldiv@dividend+1,f
  3638  0472  0822               	movf	___lldiv@divisor+2,w
  3639  0473  1C03               	skipc
  3640  0474  0F22               	incfsz	___lldiv@divisor+2,w
  3641  0475  02A6               	subwf	___lldiv@dividend+2,f
  3642  0476  0823               	movf	___lldiv@divisor+3,w
  3643  0477  1C03               	skipc
  3644  0478  0F23               	incfsz	___lldiv@divisor+3,w
  3645  0479  02A7               	subwf	___lldiv@dividend+3,f
  3646  047A                     l1274:	
  3647  047A  1428               	bsf	___lldiv@quotient,0
  3648  047B                     l1276:	
  3649  047B  3001               	movlw	1
  3650  047C                     u935:	
  3651  047C  1003               	clrc
  3652  047D  0CA3               	rrf	___lldiv@divisor+3,f
  3653  047E  0CA2               	rrf	___lldiv@divisor+2,f
  3654  047F  0CA1               	rrf	___lldiv@divisor+1,f
  3655  0480  0CA0               	rrf	___lldiv@divisor,f
  3656  0481  3EFF               	addlw	-1
  3657  0482  1D03               	skipz
  3658  0483  2C7C               	goto	u935
  3659  0484                     l1278:	
  3660  0484  3001               	movlw	1
  3661  0485  02AC               	subwf	___lldiv@counter,f
  3662  0486  1D03               	btfss	3,2
  3663  0487  2C89               	goto	u941
  3664  0488  2C8A               	goto	u940
  3665  0489                     u941:	
  3666  0489  2C51               	goto	l1268
  3667  048A                     u940:	
  3668  048A                     l1280:	
  3669  048A  082B               	movf	___lldiv@quotient+3,w
  3670  048B  00A3               	movwf	?___lldiv+3
  3671  048C  082A               	movf	___lldiv@quotient+2,w
  3672  048D  00A2               	movwf	?___lldiv+2
  3673  048E  0829               	movf	___lldiv@quotient+1,w
  3674  048F  00A1               	movwf	?___lldiv+1
  3675  0490  0828               	movf	___lldiv@quotient,w
  3676  0491  00A0               	movwf	?___lldiv
  3677  0492                     l250:	
  3678  0492  0008               	return
  3679  0493                     __end_of___lldiv:	
  3680  007E                     btemp	set	126	;btemp
  3681  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _b2d->_I2C_Read
    _b2d->___wmul
    _setTime->_d2b
    _d2b->___awdiv
    _I2C_Write->_d2b
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _updateTime->_I2C_Write
    _setTime->_I2C_Write
    _I2C_Init->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   11649
                                             21 BANK0     15    15      0
                           _I2C_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                            _setTime
                         _updateTime
 ---------------------------------------------------------------------------------
 (1) _updateTime                                           0     0      0    2407
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
                                _b2d
 ---------------------------------------------------------------------------------
 (2) _b2d                                                  4     2      2     744
                                              6 COMMON     4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     653
                                              0 COMMON     6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (1) _setTime                                              0     0      0    4234
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
                                _d2b
 ---------------------------------------------------------------------------------
 (2) _d2b                                                  4     2      2    3224
                                              9 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                              0 BANK0      2     0      2
                           _I2C_Hold
                                _d2b (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod
   _setTime
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
       _d2b (ARG)
         ___awdiv
         ___awmod
     _d2b
       ___awdiv
       ___awmod
   _updateTime
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Read
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
       _d2b (ARG)
         ___awdiv
         ___awmod
     _b2d
       _I2C_Read (ARG)
         _I2C_Hold
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 28 06:38:46 2020

       __size_of_I2C_Begin 0009                          pc 0002                __CFG_CP$OFF 0000  
       __size_of_I2C_Write 000A                         l61 00CE                         l70 00AA  
                       l55 030D                         l80 0115                         l64 0097  
                       l81 0116                         l73 01B9                         l82 011C  
                       l90 00C1                         l67 00A0                         l84 011D  
                       l76 0105                         l77 0108                         l78 010E  
                       l79 010F                         l87 00FB                         l96 02BA  
                       l99 03C3               ___awdiv@sign 0076                         fsr 0004  
      ___wmul@multiplicand 0072                __CFG_LVP$ON 0000                        l102 0222  
                      l111 018C                        l120 062D                        l114 01E9  
                      l108 0142                        l117 0541                        l214 014F  
                      l216 0167                        l250 0492                        l228 0268  
                      l380 0366                        l367 042A                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u510 00CA  
                      u511 00C9                        u520 00CE                        u600 0163  
                      _PEN 048A                        u521 00CD                        u601 0162  
                      u530 0101                        u610 03C9               __CFG_CPD$OFF 0000  
                      u531 0100                        u611 03C8                        u540 010C  
                      u700 0421                        u620 03D4                        u541 010B  
                      u701 0420                        u621 03D3                        u550 0113  
                      u630 03E5                        u710 0313                        u551 0112  
                      u631 03E4                        u711 0312                        u560 011A  
                      u720 031E                        u800 01B1                        u561 0119  
                      u721 031D                        u801 01AD                        u650 03F7  
                      u730 0329                        u570 0149                        u651 03F6  
                      u731 0328                        u571 0148                        u900 0451  
                      _SEN 0488                        u901 0450                        u645 03E9  
                      u830 022F                        u670 0408                        u750 033B  
                      u814 01B4                        u831 022E                        u671 0407  
                      u751 033A                        u920 046C                        u760 0345  
                      u921 046B                        u841 0238                        u825 01FB  
                      u665 03F8                        u761 0344                        u745 032D  
                      u585 0150                        u842 023F                        u690 041C  
                      u915 0453                        u843 0246                        u691 041B  
                      u675 0404                        u595 0157                        u940 048A  
                      u780 0358                        u941 0489                        u925 0468  
                      u685 0410                        u781 0357                        u765 0341  
                      u870 0260                        u950 02D6                        u790 035D  
                      u935 047C                        u871 025F                        u855 0248  
                      u791 035C                        u775 034C                        u880 043D  
                      u960 026F                        u881 043C                        u865 0250  
                      u961 026E                        u955 02D1                        u980 0298  
                      u981 0297                        u895 0442                        u975 0277  
                      u995 02A0                        _b2d 0168                        _d2b 01BA  
          __end_of_I2C_End 00A1                        _min 004E                        _sec 0044  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             __CFG_IESO$ON 0000                       ?_b2d 0076                       ?_d2b 0079  
                     l1100 03C5                       l1110 03D9                       l1102 03C9  
                     l1120 03EF                       l1112 03DD                       l1104 03CE  
                     l1200 01A8                       l1210 00E6                       l1130 040F  
                     l1122 03F3                       l1114 03DF                       l1106 03D0  
                     l1202 01B4                       l1212 00EC                       l1300 0280  
                     l1220 01F5                       l1132 0416                       l1124 03F7  
                     l1116 03E5                       l1108 03D4                       l1204 01B5  
                     l1214 00EF                       l1310 02A9                       l1302 0285  
                     l1230 0211                       l1222 01F8                       l1070 00C2  
                     l1126 0408                       l1118 03E8                       l1134 041C  
                     l1150 031A                       l1142 030E                       l1080 0113  
                     l1216 00F8                       l1208 00E3                       l1320 0376  
                     l1312 02AE                       l1304 028B                       l1232 0217  
                     l1224 0206                       l1072 00CA                       l1136 0421  
                     l1128 040E                       l1160 0333                       l1152 031E  
                     l1144 030F                       l1400 07A1                       l1250 022F  
                     l1082 011A                       l1074 00FD                       l1322 0385  
                     l1314 02B4                       l1306 0292                       l1234 021A  
                     l1226 0209                       l1218 01EB                       l1330 012F  
                     l1138 0426                       l1170 0352                       l1162 0337  
                     l1154 0323                       l1146 0313                       l1242 01BA  
                     l1090 0156                       l1410 07C8                       l1402 07AA  
                     l1260 042B                       l1252 0246                       l1076 0101  
                     l1324 038B                       l1316 0367                       l1308 0298  
                     l1236 021F                       l1228 020E                       l1332 0135  
                     l1068 00C2                       l1180 008F                       l1164 033B  
                     l1156 0329                       l1172 0358                       l1148 0318  
                     l1092 015D                       l1084 0143                       l1412 07D1  
                     l1404 07B0                       l1340 0631                       l1270 045A  
                     l1262 043D                       l1254 024F                       l1246 0223  
                     l1078 010C                       l1318 036D                       l1326 011F  
                     l1182 0094                       l1190 00A6                       l1174 035D  
                     l1166 0345                       l1158 032C                       l1334 0493  
                     l1094 0163                       l1086 0145                       l1238 0168  
                     l1414 07DA                       l1406 07B9                       l1350 0664  
                     l1342 0636                       l1272 046C                       l1264 0440  
                     l1280 048A                       l1256 0260                       l1248 022B  
                     l1328 0122                       l1184 0098                       l1176 0362  
                     l1168 034B                       l1192 018D                       l1088 0149  
                     l1336 0542                       l1408 07C2                       l1360 06C3  
                     l1352 0677                       l1344 0645                       l1274 047A  
                     l1266 044D                       l1290 02C6                       l1186 009D  
                     l1098 03C4                       l1194 0192                       l1370 0722  
                     l1362 06D6                       l1354 068A                       l1346 064A  
                     l1338 062E                       l1276 047B                       l1268 0451  
                     l1292 030C                       l1284 02BB                       l1188 00A1  
                     l1196 019A                       l1380 0751                       l1372 0735  
                     l1364 06E9                       l1356 069D                       l1348 064F  
                     l1278 0484                       l1286 02BF                       l1294 00B5  
                     l1198 01A3                       l1390 0778                       l1382 075A  
                     l1374 073A                       l1366 06FC                       l1358 06B0  
                     l1288 02C3                       l1296 026A                       l1392 0781  
                     l1384 0760                       l1376 0742                       l1368 070F  
                     l1298 026F                       l1394 078A                       l1386 0769  
                     l1378 0748                       l1396 0792                       l1388 0772  
                     l1398 0798                       STR_1 0009                       STR_2 0010  
                     u1000 0142                       u1001 0141                       u1017 07E2  
                     u1027 020B                       u1037 021C                       u1047 0371  
                     u1057 0380                       u1067 038F                       u1077 00F3  
                     _RCEN 048B               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
        ?_Lcd_Write_String 0070                       _date 0048                       _main 062E  
                     _hour 0046           __end_of_I2C_Hold 00CF           __end_of_I2C_Init 030E  
         __end_of_I2C_Read 01BA                       _year 004C                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0000         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 00FC              __CFG_MCLRE$ON 0000                      ??_b2d 0078  
                    ??_d2b 007B                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D            __end_of___awdiv 042B              __CFG_WDTE$OFF 0000  
          __end_of___awmod 0367            __end_of___lldiv 0493            ___awdiv@divisor 0070  
          ___awdiv@counter 0075    __size_of_Lcd_Set_Cursor 0052                      _TRISD 0088  
      ___lmul@multiplicand 0074          __end_of_I2C_Begin 0098                      _month 004A  
          __end_of_setTime 0542          __end_of_I2C_Write 00AB                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 03C4  
         __end_of_Lcd_Port 011E            __initialization 07EC               __end_of_main 07EC  
                ??_I2C_End 0070                     ??_main 0035         __size_of_Lcd_Clear 000D  
         ___awdiv@dividend 0072                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
            d2b@to_convert 0079                     ___lmul 0223                     ___wmul 0143  
                ??___awdiv 0074                  ??___awmod 0074                  ??___lldiv 007D  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
                ?_I2C_Hold 0070                  ?_I2C_Init 002D                  ?_I2C_Read 0070  
                ??_setTime 007D            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 00C2             __pcstackCOMMON 0070               __pidataBANK0 00AB  
           _Lcd_Set_Cursor 0269                 ??_I2C_Hold 0070                 ??_I2C_Init 0031  
               ??_I2C_Read 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 004E               I2C_Init@freq 002D                 __pmaintext 062E  
                  ?___lmul 0070                    ?___wmul 0070                    _I2C_End 0098  
           ___lmul@product 0079  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 02BB  
         I2C_Read@incoming 0074                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 01EA                    _Lcd_Cmd 00E2                  _I2C_Begin 008F  
                _I2C_Write 00A1                    ___awdiv 03C4            __size_of___lmul 0046  
                  ___awmod 030E                    ___lldiv 042B            __size_of___wmul 0025  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0542                    __ptext2 0168  
                  __ptext3 0143                    __ptext4 018D                    __ptext5 0493  
                  __ptext6 01BA                    __ptext7 030E                    __ptext8 03C4  
                  __ptext9 00A1               __size_of_b2d 0025               __size_of_d2b 0030  
         ___awmod@dividend 0072                    _setTime 0493     __end_of_Lcd_Write_Char 0223  
     end_of_initialization 07FC                 ?_I2C_Begin 0070                 ?_I2C_Write 0020  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  Lcd_Port@a 0070  
               _updateTime 0542          __size_of_I2C_Hold 000D          __size_of_I2C_Init 0053  
        __size_of_I2C_Read 002D            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                 main@month0 0040                 main@month1 0041  
                _Lcd_Clear 00B5             __end_of___lmul 0269             __end_of___wmul 0168  
         _Lcd_Write_String 011E        start_initialization 07EC                __end_of_b2d 018D  
              __end_of_d2b 01EA          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
              ??_I2C_Begin 0070                ??_I2C_Write 007D                 ?_Lcd_Clear 0070  
                 ??___lmul 0078                   ??___wmul 0074                 init_fetch0 00CF  
              __pdataBANK0 0044                   ?_I2C_End 0070            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073                  ___latbits 0002              __pcstackBANK0 0020  
              ?_updateTime 0070                   ?_Lcd_Cmd 0070                I2C_Read@ack 0070  
         ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070                   ?___awmod 0070  
                 ?___lldiv 0020     __CFG_FOSC$EXTRC_CLKOUT 0000                  __pstrings 0003  
                 _I2C_Hold 00C2                   _I2C_Init 02BB                   _I2C_Read 018D  
                 ?_setTime 0070             ___wmul@product 0074                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074        __size_of_updateTime 00EC           __size_of_I2C_End 0009  
              __stringbase 0008          ___wmul@multiplier 0070                  main@date0 003E  
                main@date1 003F           ??_Lcd_Write_Char 0071                  main@hour0 003C  
                main@hour1 003D                  main@year0 0042                  main@year1 0043  
                 _Lcd_Init 0367                   _Lcd_Port 00FC          ___lmul@multiplier 0070  
 __end_of_Lcd_Write_String 0143           __size_of_Lcd_Cmd 001A              I2C_Write@data 0020  
         __size_of___awdiv 0067           __size_of___awmod 0059           __size_of___lldiv 0068  
       __end_of__stringtab 0009           __size_of_setTime 00AF                   __ptext10 0098  
                 __ptext11 008F                   __ptext20 02BB                   __ptext12 00C2  
                 __ptext21 0223                   __ptext13 011E                   __ptext22 042B  
                 __ptext14 01EA                   __ptext15 0269                   __ptext16 0367  
                 __ptext17 00B5                   __ptext18 00E2                   __ptext19 00FC  
        __CFG_BOR4V$BOR40V 0000              __size_of_main 01BE                   main@min0 003A  
                 main@min1 003B                   main@sec0 0038                   main@sec1 0039  
             ??_updateTime 007D                   init_ram0 00D3         Lcd_Write_Char@temp 0072  
         ___lldiv@dividend 0024                  stringcode 0003         __end_of_updateTime 062E  
       Lcd_Set_Cursor@temp 007A           ___lldiv@quotient 0028                   stringdir 0003  
                 stringtab 0003              b2d@to_convert 0076  
